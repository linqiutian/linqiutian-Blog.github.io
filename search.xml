<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux驱动基础知识</title>
      <link href="/2024/08/07/Linux%E9%A9%B1%E5%8A%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/2024/08/07/Linux%E9%A9%B1%E5%8A%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="1-指令"><a href="#1-指令" class="headerlink" title="1.指令"></a>1.指令</h1><h2 id="1-1-常用的Linux指令"><a href="#1-1-常用的Linux指令" class="headerlink" title="1.1 常用的Linux指令"></a>1.1 常用的Linux指令</h2><ol><li><p><strong>怎么查看当前进程？怎么执行退出？怎么查看当前路径？</strong><br>查看当前进程： <code>ps</code><br>执行退出： <code>exit</code><br>查看当前路径： <code>pwd</code></p></li><li><p><strong>ls 命令执行什么功能？ 可以带哪些参数？</strong><br><strong>功能</strong><br>列出指定目录中的目录，以及文件<br><strong>参数</strong><br><code>-a</code> 显示所有文件及目录 (. 开头的隐藏文件也会列出)<br><code>-l</code> 除文件名称外，亦将文件型态、权限、拥有者、文件大小等资讯详细列出<br><code>-r</code> 将文件以相反次序显示(原定依英文字母次序)<br><code>-t</code> 将文件依建立时间之先后次序列出<br><code>-A</code> 同 -a ，但不列出 “.” (目前目录) 及 “…” (父目录)<br><code>-F</code> 在列出的文件名称后加一符号；例如可执行档则加 “*”, 目录则加 “&#x2F;”<br><code>-R</code> 若目录下有文件，则以下之文件亦皆依序列出</p><p><code>../abc/abc.txt (..表示上一层)</code></p></li><li><p><strong>创建目录用什么命令？</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir runoob        #在工作目录下，建立一个名为 runoob 的子目录 </span><br><span class="line">mkdir -p runoob2/test   #在工作目录下的 runoob2 目录中，建立一个名为 test 的子目录。</span><br><span class="line">若 runoob2 目录原本不存在，则建立一个。（注：本例若不加 -p 参数，且原本 runoob2 目录不存在，则产生错误。）</span><br></pre></td></tr></table></figure></li><li><p><strong>创建文件用什么命令？</strong></p><p><strong>vi或vim</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi file1.txt #直接创建并打开一个文件file1.txt</span><br></pre></td></tr></table></figure><p><strong>touch</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch file2.txt #创建新的空文件file2.txt</span><br></pre></td></tr></table></figure><p><strong>echo</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;this is a new file&quot; &gt; file3.txt   #创建文件file3.txt并将this is a new file写入（说明：使用&gt;指令覆盖文件原内容并重新输入内容，若文件不存在则创建文件。）</span><br><span class="line">echo &quot;add contents&quot; &gt;&gt;file3.txt    #在已存在的文件补充写入新内容add contents（说明：使用&gt;&gt;指令向文件追加内容，原内容将保存。）</span><br></pre></td></tr></table></figure><p><strong>less 、more 、cat</strong></p><p>三者都是将文件内容输出到标准输出，其中less和more可以分页显示，cat是显示全部。<br>三者可以根据已经存在的文件创建新的文件。假设已经存在文件1.txt。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat 1.txt &gt; 2.txt</span><br><span class="line">less 1.txt &gt; 3.txt</span><br><span class="line">more 1.txt &gt; 4.txt</span><br></pre></td></tr></table></figure><p>此时创建的文件内容都和1.txt中文件内容相同。</p><p>cd</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &gt; file3.txt  #创建新的空文件file3.txt</span><br><span class="line">cd &gt;&gt; file4.txt  #创建新的空文件file4.txt</span><br></pre></td></tr></table></figure><p>cd最主要的作用是切换目录，在cd后面跟&gt;或&gt;&gt;再加上文件名就可以创建一个内容为空的文件。它和echo的区别之处在于<strong>echo可写文件内容，而cd并不能</strong>。</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2024/08/07/test/"/>
      <url>/2024/08/07/test/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2024/08/06/2024-8-6(%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0)/"/>
      <url>/2024/08/06/2024-8-6(%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0)/</url>
      
        <content type="html"><![CDATA[<h2 id="测试测试"><a href="#测试测试" class="headerlink" title="测试测试"></a>测试测试</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法自带格式(如何写博客)</title>
      <link href="/2024/08/06/Markdown%E8%AF%AD%E6%B3%95%E8%87%AA%E5%B8%A6%E6%A0%BC%E5%BC%8F(%E5%A6%82%E4%BD%95%E5%86%99%E5%8D%9A%E5%AE%A2)/"/>
      <url>/2024/08/06/Markdown%E8%AF%AD%E6%B3%95%E8%87%AA%E5%B8%A6%E6%A0%BC%E5%BC%8F(%E5%A6%82%E4%BD%95%E5%86%99%E5%8D%9A%E5%AE%A2)/</url>
      
        <content type="html"><![CDATA[<p><img src="/./../images/bywind.png" alt="图"></p><p>用Typora软件更简单</p><p><a href="https://www.bilibili.com/video/BV1iHaTe9EZ3/?spm_id_from=333.337.search-card.all.click&vd_source=390e7ea253547d9c75882d502ff42a1b">Typora安装激活流程_哔哩哔哩_bilibili</a></p><p>Typora安装文件及下载地址~<br>链接:<a href="https://pan.baidu.com/s/17CunIoob5JbtQZ1N5ZIyfg?pwd=zspz">https://pan.baidu.com/s/17CunIoob5JbtQZ1N5ZIyfg?pwd=zspz</a> 提取码:zspz</p><p>一键3连 上传代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl&amp;&amp;hexo g&amp;&amp;hexo d</span><br></pre></td></tr></table></figure><h2 id="多级标题"><a href="#多级标题" class="headerlink" title="多级标题"></a>多级标题</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># H1</span></span><br><span class="line"><span class="section">## H2</span></span><br><span class="line"><span class="section">### H3</span></span><br><span class="line"><span class="section">#### H4</span></span><br><span class="line"><span class="section">##### H5</span></span><br><span class="line"><span class="section">###### H6</span></span><br></pre></td></tr></table></figure><h2 id="文字样式"><a href="#文字样式" class="headerlink" title="文字样式"></a>文字样式</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线演示<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">文字<span class="strong">**加粗**</span>演示</span><br><span class="line"></span><br><span class="line">文字<span class="emphasis">*斜体*</span>演示</span><br><span class="line"></span><br><span class="line">文本<span class="code">`高亮`</span>演示</span><br><span class="line"></span><br><span class="line">文本~~删除~~线演示</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span> = <span class="string">5</span>&gt;</span></span>5号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>黑体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">blue</span>&gt;</span></span>蓝色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">MistyRose</span>&gt;</span></span>这里的背景色是：MistyRosen，此处输入任意想输入的内容<span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt;  Java</span></span><br><span class="line"><span class="quote">&gt; 二级引用演示</span></span><br><span class="line"><span class="quote">&gt; MySQL</span></span><br><span class="line"><span class="quote">&gt; &gt;外键</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;事务</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;<span class="strong">**行级锁**</span>(引用内部一样可以用格式)</span></span><br><span class="line"><span class="quote">&gt; </span></span><br><span class="line"><span class="quote">&gt; ....</span></span><br></pre></td></tr></table></figure><h2 id="1-5-分割线"><a href="#1-5-分割线" class="headerlink" title="1.5 分割线"></a>1.5 分割线</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 本地图片</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/assets/pusheencode.webp&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;示例图片&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:50%;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="section"># 在线图片</span></span><br><span class="line">![<span class="string">code</span>](<span class="link">https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png</span>)</span><br></pre></td></tr></table></figure><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 项目标号 | 资金     | 备注 |</span><br><span class="line">| -------- | -------- | ---- |</span><br><span class="line">| 1        | 100，000 | 无   |</span><br><span class="line">| 2        | 200，000 | 无   |</span><br><span class="line">| 3        | 300,600  | 重要 |</span><br></pre></td></tr></table></figure><h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\Gamma(z)=\int<span class="emphasis">_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt.</span></span><br><span class="line"><span class="emphasis">$$</span></span><br></pre></td></tr></table></figure><p>​分栏 tab</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><ol><li>Unique name :<ul><li>选项卡块标签的唯一名称，不带逗号。</li><li>将在#id中用作每个标签及其索引号的前缀。</li><li>如果名称中包含空格，则对于生成#id，所有空格将由破折号代替。</li><li>仅当前帖子&#x2F;页面的URL必须是唯一的！</li></ul></li><li>[index]:<ul><li>活动选项卡的索引号。</li><li>如果未指定，将选择第一个标签（1）。</li><li>如果index为-1，则不会选择任何选项卡。</li><li>可选参数。</li></ul></li><li>[Tab caption]:<ul><li>当前选项卡的标题。</li><li>如果未指定标题，则带有制表符索引后缀的唯一名称将用作制表符的标题。</li><li>如果未指定标题，但指定了图标，则标题将为空。</li><li>可选参数。</li></ul></li><li>[@icon]:<ul><li>FontAwesome图标名称（全名，看起来像“ fas fa-font”）</li><li>可以指定带空格或不带空格；</li><li>例如’Tab caption @icon’ 和 ‘Tab caption@icon’.</li><li>可选参数。</li></ul></li></ol><p>示例1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>示例2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line">**tab名字为第一个Tab**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line">**只有图标 没有Tab名字**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span><br><span class="line">**名字+icon**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>示例1</p><p>.<div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">test1 1</button><button type="button" class="tab " data-href="test1-2">test1 2</button><button type="button" class="tab " data-href="test1-3">test1 3</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></p><p>示例2</p><div class="tabs" id="test4"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test4-1">第一个Tab</button><button type="button" class="tab " data-href="test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button><button type="button" class="tab " data-href="test4-3"><i class="fas fa-bomb"></i>炸弹</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="音频-audio"><a href="#音频-audio" class="headerlink" title="音频 audio"></a>音频 audio</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">参数配置</button><button type="button" class="tab " data-href="test1-2">示例代码</button><button type="button" class="tab " data-href="test1-3">演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"></div><div class="tab-item-content" id="test1-2"></div><div class="tab-item-content" id="test1-3"></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>STUDY210(朱有鹏)</title>
      <link href="/2024/08/06/test/STUDY210(%E6%9C%B1%E6%9C%89%E9%B9%8F)/"/>
      <url>/2024/08/06/test/STUDY210(%E6%9C%B1%E6%9C%89%E9%B9%8F)/</url>
      
        <content type="html"><![CDATA[<h1 id="隐藏文件与非隐藏文件"><a href="#隐藏文件与非隐藏文件" class="headerlink" title="隐藏文件与非隐藏文件"></a>隐藏文件与非隐藏文件</h1><p>Windows中：文件隐藏与不隐藏通过设置文件属性实现的，可以点击文件，右键属性，选择勾选隐藏选项来设置文件为隐藏文件。。在Windows中查看隐藏文件方法：菜单栏 工具-&gt;文件夹选项-&gt;查看-&gt;显示所有文件<br>和文件夹。<br>Linux中：linux中隐藏文件特点是文件名以.开头，跟文件属性无关。在linux中查看隐藏文件用ls -a命令（普通显示ls）</p><h1 id="相对路径与绝对路径"><a href="#相对路径与绝对路径" class="headerlink" title="相对路径与绝对路径"></a>相对路径与绝对路径</h1><p>什么是路径：路径是用来标识一个文件在操作系统的文件系统中存储位置的。pathname<br>举例：<br>D:\winshare\enum.c 全路径 pathname<br>D:\winshare路径 path<br>enum.c文件名name</p><p>绝对路径：路径是从绝对位置开始的。譬如Windows中从某一个盘符开始（C:\），linux中从根目录&#x2F;开始<br>相对路径：指明路径的时候，是从当前所在的位置开始的。</p><p>举例：<br>D:\我的文档\123\123.txt<br>D:\我的文档\abc\abc.txt<br>当前在123.txt，但是要去abc.txt<br>方式1：采用绝对路径。D:\我的文档\abc\abc.txt<br>方式2：采用相对路径。..&#x2F;abc&#x2F;abc.txt (..表示上一层)<br>从当前路径开始，往上走一层，再往下走一层（abc）就到了</p><p>测试：<br>&#x2F;abc&#x2F;123&#x2F;def.txt是linux绝对路径<br>abc&#x2F;123&#x2F;def.txt不是linux绝对路径<br>F:\abc\123\def.txt是windows绝对路径<br>abc\123\def.txt不是windows绝对路径</p><h1 id="linux内核、发行版"><a href="#linux内核、发行版" class="headerlink" title="linux内核、发行版"></a>linux内核、发行版</h1><p>linux本身指的是一个操作系统内核，只有内核是无法直接使用的。我们需要的，可以使用的操作系统是一个包含了内核和一批有用的应用程序的一个集合体，这个就叫linux发行版。<br>ubuntu、redhat就是linux的不同的发行版。</p><h1 id="GUI（图形用户界面）和cmdline（命令行）"><a href="#GUI（图形用户界面）和cmdline（命令行）" class="headerlink" title="GUI（图形用户界面）和cmdline（命令行）"></a>GUI（图形用户界面）和cmdline（命令行）</h1><p>GUI：grahics user interface，图形用户界面。<br>cmdline：command line，命令行。<br>人机交互：人和机器（计算机）进行交互，常用的有命令行和GUI。<br>Windows下既有GUI，又有命令行。linux中也是既有GUI，又有命令行。<br>但是，在linux中我们常用命令行(生产用)，在Windows中常用GUI（娱乐用）</p><h1 id="linux常用命令："><a href="#linux常用命令：" class="headerlink" title="linux常用命令："></a>linux常用命令：</h1><p>(1) ls（list，列表）<br>作用：使用列表把当前文件夹下所有文件显示出来<br>    ls -a显示所有文件，包括隐藏文件<br>    ls -l以详细信息显示<br>    ls -a -l<br>    ls -l -a<br>    ls -la<br>    ls -al四种方式都是可以的</p><p>man 作用：查询帮助信息</p><p>man 1 查询linux命令 </p><p>man2 查询api   </p><p>man3查询C库函数</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CRAIC-2024目标射击实践过程</title>
      <link href="/2024/08/06/test/CRAIC-2024%E7%9B%AE%E6%A0%87%E5%B0%84%E5%87%BB%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B/"/>
      <url>/2024/08/06/test/CRAIC-2024%E7%9B%AE%E6%A0%87%E5%B0%84%E5%87%BB%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="CRAIC目标射击实践"><a href="#CRAIC目标射击实践" class="headerlink" title="CRAIC目标射击实践"></a>CRAIC目标射击实践</h1><h1 id="比赛介绍"><a href="#比赛介绍" class="headerlink" title="比赛介绍"></a>比赛介绍</h1><p>中国机器人及人工智能大赛是一项历史悠久、影响广泛的全国性学科竞赛。目前大赛已为我国培养了大量“能动手”、“敢创新”、“善协作”的复合型人才。大赛已列入中国高等教育学会发布的全国普通高等学校学科竞赛排行榜、全国普通高校大学生竞赛分析报告。为积极响应中国机器人及人工智能大赛组委会号召以及进一步发挥大赛培养学生主动学习、主动创新、主动创造的能力，激发广大学生探索、应用、创新、创造新技术的热情，有效推进相关专业人才培养。</p><h1 id="主要使用代码"><a href="#主要使用代码" class="headerlink" title="主要使用代码"></a>主要使用代码</h1><p>主目录运行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">建图：  ./1-gmapping.sh </span><br><span class="line">保存：  roslaunch robot_slam save_map.launch</span><br><span class="line">射击： roslaunch abot_bringup shoot.launch   发射驱动程序</span><br><span class="line">rostopic pub /shoot  std_msgs/String &quot;data: &#x27;&#x27; &quot;   发布射击的空话题，等待发射</span><br><span class="line">识别：</span><br><span class="line">roslaunch usb_cam usb_cam_test.launch   打开相机</span><br><span class="line">rosrun rqt_image_view  rqt_image_view   可视化相机</span><br><span class="line">语音：</span><br><span class="line">连接蓝牙耳机WI-C200（在蓝牙设置中连接）</span><br><span class="line">roscore</span><br><span class="line">rosrun  robot_voice   tts_subscribe</span><br><span class="line">rostopic  pub /voiceWords std_msgs/String &quot;data: &#x27;1234&#x27; &quot;</span><br><span class="line"></span><br><span class="line">启动导航与识别：</span><br><span class="line">3-mission.sh 在这里</span><br><span class="line">roslaunch track_tag usb_cam_with_calibration.launch  打开相机节点</span><br><span class="line">roslaunch track_tag ar_track_camera.launch   启动二维码识别节点</span><br><span class="line">rosrun robot_voice tts_subscribe; exec bash  语音播报节点</span><br><span class="line">robot_slam/launch/multi_goal.launch  修改导航的目标点的坐标值（文件路径）</span><br><span class="line">robot_slam/scripts/ navigation_multi_goals.py  修改对应id分别走到哪个点（文件路径）</span><br><span class="line"></span><br><span class="line">射击相关：</span><br><span class="line">user_demo/param/mission.yaml    修改射击目标点的相关参数（文件路径）</span><br><span class="line">roslaunch usb_cam usb_cam_test.launch   打开相机</span><br><span class="line">roslaunch  find_object_2d  find_object_2d6.launch  启动识别程序</span><br><span class="line">rosrun  robot_slam   III.py   识别结果判断</span><br><span class="line">rostopic echo /object_position</span><br><span class="line">跟踪标签：在6-mission.sh里有 ，</span><br><span class="line">roslaunch  track_tag usb_cam_with_calibration.launch</span><br><span class="line">roslaunch  track_tag ar_track_camera.launch</span><br><span class="line">rostopic echo /ar_pose_marker</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">启动代码前一定要插上炮台的USB串口线，不然运行就会报错没有串口 /dev/shoot，记得打开炮台开关</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">查看坐标点</span><br><span class="line">运行navigation.sh脚本前注释掉最后一行 ，在打开的地图里点击目标点前 运 rostopic echo /move_base_simple/goal</span><br><span class="line">在导航地图中使用RViz中的navigation goal标定目标后，到终端的输出查看pose 字段，里面有x,y目标点</span><br><span class="line">直接拿迟来量坐标比较快，单位是米，搞懂ros坐标系</span><br><span class="line"></span><br><span class="line">编译及运行--------------------------------------------------------------------</span><br><span class="line">catkin_make    </span><br><span class="line">catkin_make -DCATKIN_WHITELIST_PACKAGES=&quot;robot_slam&quot;</span><br><span class="line"></span><br><span class="line">source devel/setup.bash</span><br><span class="line">source /opt/ros/melodic/setup.bash</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="逻辑文件"><a href="#逻辑文件" class="headerlink" title="逻辑文件"></a>逻辑文件</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">#!/usr/bin/env python</span><br><span class="line">#coding: utf-8</span><br><span class="line"> </span><br><span class="line">import rospy</span><br><span class="line">from geometry_msgs.msg import Point, Twist</span><br><span class="line">import threading</span><br><span class="line">import actionlib</span><br><span class="line">import serial</span><br><span class="line">import time</span><br><span class="line">from actionlib_msgs.msg import GoalStatus</span><br><span class="line">from move_base_msgs.msg import MoveBaseAction, MoveBaseGoal</span><br><span class="line">from geometry_msgs.msg import PoseWithCovarianceStamped</span><br><span class="line">from tf_conversions import transformations</span><br><span class="line">from ar_track_alvar_msgs.msg import AlvarMarkers</span><br><span class="line">from math import pi</span><br><span class="line">import subprocess</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class Navigation:</span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.set_pose_pub = rospy.Publisher(&#x27;/initialpose&#x27;, PoseWithCovarianceStamped, queue_size=5)</span><br><span class="line">        self.move_base = actionlib.SimpleActionClient(&quot;move_base&quot;, MoveBaseAction)</span><br><span class="line">        self.move_base.wait_for_server(rospy.Duration(60))</span><br><span class="line"> </span><br><span class="line">    def set_pose(self, p):</span><br><span class="line">        if self.move_base is None:</span><br><span class="line">            return False</span><br><span class="line">        x, y, th = p</span><br><span class="line">        pose = PoseWithCovarianceStamped()</span><br><span class="line">        pose.header.stamp = rospy.Time.now()</span><br><span class="line">        pose.header.frame_id = &#x27;map&#x27;</span><br><span class="line">        pose.pose.pose.position.x = x</span><br><span class="line">        pose.pose.pose.position.y = y</span><br><span class="line">        q = transformations.quaternion_from_euler(0.0, 0.0, th/180.0*pi)</span><br><span class="line">        pose.pose.pose.orientation.x = q[0]</span><br><span class="line">        pose.pose.pose.orientation.y = q[1]</span><br><span class="line">        pose.pose.pose.orientation.z = q[2]</span><br><span class="line">        pose.pose.pose.orientation.w = q[3]</span><br><span class="line">        self.set_pose_pub.publish(pose)</span><br><span class="line">        return True </span><br><span class="line"> </span><br><span class="line">    def _feedback_cb(self, feedback):</span><br><span class="line">        msg = feedback</span><br><span class="line">        #rospy.loginfo(&quot;[Navi] navigation feedback\r\n%s&quot;%feedback)</span><br><span class="line"> </span><br><span class="line">    def goto(self, p):</span><br><span class="line">        rospy.loginfo(&quot;[Navigation] goto %s&quot;%p)</span><br><span class="line">        goal = MoveBaseGoal()</span><br><span class="line">        goal.target_pose.header.frame_id = &#x27;map&#x27;</span><br><span class="line">        goal.target_pose.header.stamp = rospy.Time.now()</span><br><span class="line">        goal.target_pose.pose.position.x = p[0]</span><br><span class="line">        goal.target_pose.pose.position.y = p[1]</span><br><span class="line">        q = transformations.quaternion_from_euler(0.0, 0.0, p[2]/180.0*pi)</span><br><span class="line">        goal.target_pose.pose.orientation.x = q[0]</span><br><span class="line">        goal.target_pose.pose.orientation.y = q[1]</span><br><span class="line">        goal.target_pose.pose.orientation.z = q[2]</span><br><span class="line">        goal.target_pose.pose.orientation.w = q[3]</span><br><span class="line">        self.move_base.send_goal(goal, self._done_cb, self._active_cb, self._feedback_cb)</span><br><span class="line">        result = self.move_base.wait_for_result(rospy.Duration(60))</span><br><span class="line">        if not result:</span><br><span class="line">            self.move_base.cancel_goal()</span><br><span class="line">            rospy.loginfo(&quot;Timed out achieving goal&quot;)</span><br><span class="line">        else:</span><br><span class="line">            state = self.move_base.get_state()</span><br><span class="line">            if state == GoalStatus.SUCCEEDED:</span><br><span class="line">                rospy.loginfo(&quot;reach goal %s succeeded!&quot;%p)</span><br><span class="line">        return True</span><br><span class="line"> </span><br><span class="line">    def _done_cb(self, status, result):</span><br><span class="line">        rospy.loginfo(&quot;navigation done! status:%d result:%s&quot;%(status, result))</span><br><span class="line"> </span><br><span class="line">    def _active_cb(self):</span><br><span class="line">        rospy.loginfo(&quot;[Navi] navigation has be actived&quot;)</span><br><span class="line"> </span><br><span class="line">    def cancel(self):</span><br><span class="line">        self.move_base.cancel_all_goals()</span><br><span class="line">        return True</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class ARTracker:</span><br><span class="line">def __init__(self):</span><br><span class="line">self.ar_sub = rospy.Subscriber(&#x27;/ar_pose_marker&#x27;, AlvarMarkers, self.ar_cb)</span><br><span class="line">def ar_cb(self,data):</span><br><span class="line">global target_id</span><br><span class="line">global ar_x</span><br><span class="line">global ar_y</span><br><span class="line">global ar_z</span><br><span class="line">global ar_id</span><br><span class="line">for marker in data.markers:</span><br><span class="line">if  marker.id == target_id :</span><br><span class="line">ar_x = marker.pose.pose.position.x</span><br><span class="line">ar_y = marker.pose.pose.position.y</span><br><span class="line">ar_z = marker.pose.pose.position.z</span><br><span class="line">ar_id = marker.id</span><br><span class="line">#print(&#x27;AR Marker Position (x,y,z):&#x27;, ar_x, ar_y,ar_z)</span><br><span class="line">break</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class Object_position:</span><br><span class="line">def __init__(self):</span><br><span class="line">    self.ar_sub = rospy.Subscriber(&#x27;/object_position&#x27;, Point, self.find_cb)</span><br><span class="line"> </span><br><span class="line">def find_cb(self,data):</span><br><span class="line">    global find_id </span><br><span class="line">    global find_x</span><br><span class="line">    global find_y     </span><br><span class="line">    point_msg = data</span><br><span class="line">    if(point_msg.z&gt;=1 and point_msg.z&lt;=5):</span><br><span class="line">        find_id = 1</span><br><span class="line">        find_x=point_msg.x</span><br><span class="line">        find_y=point_msg.y         </span><br><span class="line">    else:</span><br><span class="line">        find_id = 0</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def process():</span><br><span class="line">    rospy.spin()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">find_id = 0 </span><br><span class="line">find_x=0.0</span><br><span class="line">find_y=0.0</span><br><span class="line">target_id = 0 </span><br><span class="line">ar_id = 0 </span><br><span class="line">ar_x =0.0</span><br><span class="line">ar_y =0.0</span><br><span class="line">ar_z =0.0</span><br><span class="line"> </span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line"> </span><br><span class="line">    rospy.init_node(&#x27;navigation_demo&#x27;,anonymous=True)</span><br><span class="line">    ser = serial.Serial(port=&quot;/dev/shoot&quot;, baudrate=9600, parity=&quot;N&quot;, bytesize=8, stopbits=1)</span><br><span class="line">    pub = rospy.Publisher(&quot;/cmd_vel&quot;, Twist, queue_size=1000)</span><br><span class="line"> </span><br><span class="line">    goals = [  [1.1 , -0.37,0.0],</span><br><span class="line">            [1.1 , -1.45,.0],</span><br><span class="line">   [1.0 , -2.72,.0],</span><br><span class="line">            [0.07 , -2.72,.0]  ]</span><br><span class="line"> </span><br><span class="line">    object_position = Object_position()</span><br><span class="line">    ar_acker = ARTracker()</span><br><span class="line"> </span><br><span class="line">    executor_thread = threading.Thread(target=process).start()</span><br><span class="line"> </span><br><span class="line">    navi = Navigation()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    time.sleep(15)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># ------first--------------------------------------------------------</span><br><span class="line">    navi.goto(goals[0])</span><br><span class="line">    start=time.time()</span><br><span class="line">    is_shoot=0</span><br><span class="line">    while True:</span><br><span class="line">        if find_id == 1:</span><br><span class="line">            flog0 = find_x - 320</span><br><span class="line">            flog1 = abs(flog0)</span><br><span class="line">        print(flog0)</span><br><span class="line">            if abs(flog1) &gt;10:</span><br><span class="line">                msg = Twist()      </span><br><span class="line">                msg.angular.z = -0.01 * flog0 </span><br><span class="line">                pub.publish(msg)</span><br><span class="line">    print(msg.angular.z)</span><br><span class="line">            elif abs(flog1) &lt;= 10: </span><br><span class="line">                print(&#x27;1 is shoot&#x27;)       </span><br><span class="line">                ser.write(b&#x27;\x55\x01\x12\x00\x00\x00\x01\x69&#x27;) </span><br><span class="line">                time.sleep(0.2)       </span><br><span class="line">                ser.write(b&#x27;\x55\x01\x11\x00\x00\x00\x01\x68&#x27;) </span><br><span class="line">                time.sleep(2)</span><br><span class="line">        is_shoot=1</span><br><span class="line">                break</span><br><span class="line">        end=time.time()</span><br><span class="line">        if end-start&gt;12:</span><br><span class="line">            break</span><br><span class="line"> </span><br><span class="line">    if is_shoot==0:</span><br><span class="line">        ser.write(b&#x27;\x55\x01\x12\x00\x00\x00\x01\x69&#x27;) </span><br><span class="line">        time.sleep(0.2)       </span><br><span class="line">        ser.write(b&#x27;\x55\x01\x11\x00\x00\x00\x01\x68&#x27;) </span><br><span class="line">        time.sleep(2)</span><br><span class="line"> </span><br><span class="line">    #subprocess.run( [&#x27;rosnode&#x27;,&#x27;kill&#x27;,&#x27;find_object_2d&#x27;] )</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># ------sencond-----------------------------------------------------</span><br><span class="line">    navi.goto(goals[1])</span><br><span class="line">    target_id=1     </span><br><span class="line">    Yaw_th = 0.003</span><br><span class="line">    start=time.time()</span><br><span class="line">    is_shoot=0</span><br><span class="line">    while True:</span><br><span class="line">        if ar_id == target_id:</span><br><span class="line">            ar_x_abs = abs(ar_x)</span><br><span class="line">            print(&#x27;x:&#x27;,ar_x)</span><br><span class="line">            print(&#x27;z:&#x27;,ar_z)       </span><br><span class="line">            if ar_x_abs &gt;= Yaw_th: </span><br><span class="line">                msg = Twist()  </span><br><span class="line">                msg.angular.z = -1.5 * ar_x </span><br><span class="line">                pub.publish(msg)</span><br><span class="line">            elif ar_x_abs &lt; Yaw_th and (ar_z &gt;= 1.57 and ar_z &lt;=1.64):</span><br><span class="line">                print(&#x27;2 is shoot&#x27;) </span><br><span class="line">                ser.write(b&#x27;\x55\x01\x12\x00\x00\x00\x01\x69&#x27;) </span><br><span class="line">                time.sleep(0.1)       </span><br><span class="line">                ser.write(b&#x27;\x55\x01\x11\x00\x00\x00\x01\x68&#x27;)</span><br><span class="line">        is_shoot=1</span><br><span class="line">                break</span><br><span class="line">        end=time.time()</span><br><span class="line">        if end-start&gt;20:</span><br><span class="line">            break</span><br><span class="line"> </span><br><span class="line">    if is_shoot==0:</span><br><span class="line">        ser.write(b&#x27;\x55\x01\x12\x00\x00\x00\x01\x69&#x27;) </span><br><span class="line">        time.sleep(0.2)       </span><br><span class="line">        ser.write(b&#x27;\x55\x01\x11\x00\x00\x00\x01\x68&#x27;) </span><br><span class="line">        time.sleep(2)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># # --------------------third----------------------------------</span><br><span class="line">    navi.goto(goals[2])</span><br><span class="line">    target_id=2     # ------------------------------------------------------</span><br><span class="line">    Yaw_th = 0.002</span><br><span class="line">    start=time.time()</span><br><span class="line">    is_shoot=0</span><br><span class="line">    while True:</span><br><span class="line">        if ar_id == target_id:</span><br><span class="line">            ar_x_abs = abs(ar_x)</span><br><span class="line">        print(ar_x)       </span><br><span class="line">            if ar_x_abs &gt;= Yaw_th: </span><br><span class="line">                msg = Twist()  </span><br><span class="line">                msg.angular.z = -1.5 * ar_x  </span><br><span class="line">                pub.publish(msg)</span><br><span class="line">            elif ar_x_abs &lt; Yaw_th:</span><br><span class="line">                print(&#x27;3 is shoot&#x27;) </span><br><span class="line">                ser.write(b&#x27;\x55\x01\x12\x00\x00\x00\x01\x69&#x27;) </span><br><span class="line">                time.sleep(0.1)       </span><br><span class="line">                ser.write(b&#x27;\x55\x01\x11\x00\x00\x00\x01\x68&#x27;)</span><br><span class="line">        is_shoot=1 </span><br><span class="line">                break</span><br><span class="line"> </span><br><span class="line">        end=time.time()</span><br><span class="line">        if end-start&gt;12:</span><br><span class="line">            break</span><br><span class="line">    if is_shoot==0:</span><br><span class="line">        ser.write(b&#x27;\x55\x01\x12\x00\x00\x00\x01\x69&#x27;) </span><br><span class="line">        time.sleep(0.2)       </span><br><span class="line">        ser.write(b&#x27;\x55\x01\x11\x00\x00\x00\x01\x68&#x27;) </span><br><span class="line">        time.sleep(2)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># # -------------------------------------------------------------------------</span><br><span class="line"> </span><br><span class="line">    navi.goto(goals[3]) </span><br><span class="line">    #slowly</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    #rclpy.shutdown()</span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h1 id="二维码识别"><a href="#二维码识别" class="headerlink" title="二维码识别"></a>二维码识别</h1><p>二维码识别部分，脚本放在abot_ws&#x2F;src&#x2F;robot_slam&#x2F;scripts&#x2F;ar_demo_s.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">from</span> ar_track_alvar_msgs.msg <span class="keyword">import</span> AlvarMarkers</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ARTracker</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 初始化ROS节点，命名为&#x27;ar_tracker_node&#x27;，并设置为匿名节点</span></span><br><span class="line">        rospy.init_node(<span class="string">&#x27;ar_tracker_node&#x27;</span>, anonymous=<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># 创建一个订阅者，订阅AR标记的消息，消息类型为AlvarMarkers，回调函数为ar_cb</span></span><br><span class="line">        <span class="variable language_">self</span>.sub = rospy.Subscriber(<span class="string">&#x27;/ar_pose_marker&#x27;</span>, AlvarMarkers, <span class="variable language_">self</span>.ar_cb)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 初始化AR标记的x和y坐标</span></span><br><span class="line">        <span class="variable language_">self</span>.ar_x_0 = <span class="number">0.0</span></span><br><span class="line">        <span class="variable language_">self</span>.ar_y_0 = <span class="number">0.0</span></span><br><span class="line">        <span class="comment"># 初始化AR标记的ID</span></span><br><span class="line">        <span class="variable language_">self</span>.<span class="built_in">id</span> = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># AR标记消息的回调函数</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">ar_cb</span>(<span class="params">self, data</span>):</span><br><span class="line">        <span class="comment"># 遍历接收到的所有AR标记</span></span><br><span class="line">        <span class="keyword">for</span> marker <span class="keyword">in</span> data.markers:</span><br><span class="line">            <span class="comment"># 如果AR标记的ID为0</span></span><br><span class="line">            <span class="keyword">if</span> marker.<span class="built_in">id</span> == <span class="number">0</span>:</span><br><span class="line">                <span class="comment"># 更新AR标记的x和y坐标</span></span><br><span class="line">                <span class="variable language_">self</span>.ar_x_0 = marker.pose.pose.position.x</span><br><span class="line">                <span class="variable language_">self</span>.ar_y_0 = marker.pose.pose.position.y</span><br><span class="line">                <span class="comment"># 更新AR标记的ID</span></span><br><span class="line">                <span class="variable language_">self</span>.<span class="built_in">id</span> = marker.<span class="built_in">id</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># 打印检测到的AR标记的ID和位置信息</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;Detected AR Marker ID:&#x27;</span>, <span class="variable language_">self</span>.<span class="built_in">id</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;AR Marker Position (x,y):&#x27;</span>, <span class="variable language_">self</span>.ar_x_0, <span class="variable language_">self</span>.ar_y_0)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 创建ARTracker对象</span></span><br><span class="line">        ar_tracker = ARTracker()</span><br><span class="line">        <span class="comment"># 进入ROS事件循环</span></span><br><span class="line">        rospy.spin()</span><br><span class="line">    <span class="keyword">except</span> rospy.ROSInterruptException:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h1 id="二维码射击"><a href="#二维码射击" class="headerlink" title="二维码射击"></a>二维码射击</h1><p>二维码射击部分，脚本放在abot_ws&#x2F;src&#x2F;robot_slam&#x2F;scripts&#x2F;ar_shoot_demo.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 上面这行是为了告诉操作系统，这是一个Python脚本，可以直接运行</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">from</span> ar_track_alvar_msgs.msg <span class="keyword">import</span> AlvarMarkers</span><br><span class="line"><span class="keyword">from</span> geometry_msgs.msg <span class="keyword">import</span> Twist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义Yaw阈值</span></span><br><span class="line">Yaw_th = <span class="number">0.0045</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ARTracker</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 初始化ROS节点，命名为&#x27;ar_tracker_node&#x27;，并设置为匿名节点</span></span><br><span class="line">        rospy.init_node(<span class="string">&#x27;ar_tracker_node&#x27;</span>, anonymous=<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># 创建一个订阅者，订阅AR标记的消息，消息类型为AlvarMarkers，回调函数为ar_cb</span></span><br><span class="line">        <span class="variable language_">self</span>.sub = rospy.Subscriber(<span class="string">&#x27;/ar_pose_marker&#x27;</span>, AlvarMarkers, <span class="variable language_">self</span>.ar_cb)</span><br><span class="line">        <span class="comment"># 创建一个发布者，用于发布Twist类型的消息到/cmd_vel话题</span></span><br><span class="line">        <span class="variable language_">self</span>.pub = rospy.Publisher(<span class="string">&quot;/cmd_vel&quot;</span>, Twist, queue_size=<span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># AR标记消息的回调函数</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">ar_cb</span>(<span class="params">self, data</span>):</span><br><span class="line">        <span class="keyword">global</span> ar_x, ar_x_abs, Yaw_th</span><br><span class="line">        <span class="comment"># 获取所有AR标记</span></span><br><span class="line">        ar_markers = data</span><br><span class="line">        <span class="comment"># 遍历接收到的所有AR标记</span></span><br><span class="line">        <span class="keyword">for</span> marker <span class="keyword">in</span> data.markers:</span><br><span class="line">            <span class="comment"># 如果AR标记的ID为0</span></span><br><span class="line">            <span class="keyword">if</span> marker.<span class="built_in">id</span> == <span class="number">0</span>:</span><br><span class="line">                <span class="comment"># 获取AR标记的x坐标</span></span><br><span class="line">                ar_x = marker.pose.pose.position.x</span><br><span class="line">                <span class="comment"># 计算AR标记x坐标的绝对值</span></span><br><span class="line">                ar_x_abs = <span class="built_in">abs</span>(ar_x)</span><br><span class="line">                <span class="comment"># 如果AR标记的x坐标绝对值大于等于Yaw阈值</span></span><br><span class="line">                <span class="keyword">if</span> ar_x_abs &gt;= Yaw_th:</span><br><span class="line">                    <span class="comment"># 创建一个Twist消息</span></span><br><span class="line">                    msg = Twist()</span><br><span class="line">                    <span class="comment"># 设置消息的角速度为AR标记x坐标的相反值（*-1）</span></span><br><span class="line">                    msg.angular.z = -<span class="number">1.5</span> * ar_x</span><br><span class="line">                    <span class="comment"># 发布Twist消息</span></span><br><span class="line">                    <span class="variable language_">self</span>.pub.publish(msg)</span><br><span class="line">                <span class="comment"># 如果AR标记的x坐标绝对值小于Yaw阈值</span></span><br><span class="line">                <span class="keyword">elif</span> ar_x_abs &lt; Yaw_th:</span><br><span class="line">                    <span class="built_in">print</span> <span class="string">&quot;ok&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 创建ARTracker对象</span></span><br><span class="line">        ar_tracker = ARTracker()</span><br><span class="line">        <span class="comment"># 进入ROS事件循环</span></span><br><span class="line">        rospy.spin()</span><br><span class="line">    <span class="keyword">except</span> rospy.ROSInterruptException:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">、</span><br></pre></td></tr></table></figure><h1 id="图像识别"><a href="#图像识别" class="headerlink" title="图像识别"></a>图像识别</h1><p>图像识别部分，脚本放在abot_ws&#x2F;src&#x2F;robot_slam&#x2F;scripts&#x2F;find_demo_s.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 上面这行是为了告诉操作系统，这是一个Python脚本，可以直接运行</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">from</span> geometry_msgs.msg <span class="keyword">import</span> Point</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">object_position</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 初始化ROS节点，命名为&#x27;object_position_node&#x27;，并设置为匿名节点</span></span><br><span class="line">        rospy.init_node(<span class="string">&#x27;object_position_node&#x27;</span>, anonymous=<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># 创建一个订阅者，订阅/object_position话题，消息类型为Point，回调函数为find_cb</span></span><br><span class="line">        <span class="variable language_">self</span>.find_sub = rospy.Subscriber(<span class="string">&#x27;/object_position&#x27;</span>, Point, <span class="variable language_">self</span>.find_cb)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># /object_position话题的回调函数</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">find_cb</span>(<span class="params">self, data</span>):</span><br><span class="line">        <span class="comment"># 获取接收到的Point消息</span></span><br><span class="line">        point_msg = data</span><br><span class="line">        <span class="comment"># 打印接收到的点的x坐标</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;x:&#x27;</span>, point_msg.x)</span><br><span class="line">        <span class="comment"># 打印接收到的点的y坐标</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;y:&#x27;</span>, point_msg.y)</span><br><span class="line">        <span class="comment"># 打印接收到的点的z坐标</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;z:&#x27;</span>, point_msg.z)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 创建object_position对象</span></span><br><span class="line">        object_position = object_position()</span><br><span class="line">        <span class="comment"># 进入ROS事件循环</span></span><br><span class="line">        rospy.spin()</span><br><span class="line">    <span class="keyword">except</span> rospy.ROSInterruptException:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="图像识别射击"><a href="#图像识别射击" class="headerlink" title="图像识别射击"></a>图像识别射击</h1><p>图像识别射击部分，脚本放在abot_ws&#x2F;src&#x2F;robot_slam&#x2F;scripts&#x2F;find_shoot_demo.py</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># 上面这行是为了告诉操作系统，这是一个Python脚本，可以直接运行</span><br><span class="line"></span><br><span class="line">import rospy</span><br><span class="line">from geometry_msgs.msg import Point, Twist</span><br><span class="line">import serial</span><br><span class="line">import time</span><br><span class="line">from std_msgs.msg import String</span><br><span class="line"></span><br><span class="line"># 设置串口和波特率</span><br><span class="line">serialPort = &quot;/dev/shoot&quot;</span><br><span class="line">baudRate = 9600</span><br><span class="line"></span><br><span class="line"># 打开串口</span><br><span class="line">ser = serial.Serial(port=serialPort, baudrate=baudRate, parity=&quot;N&quot;, bytesize=8, stopbits=1)</span><br><span class="line"></span><br><span class="line">class object_position:</span><br><span class="line">    def __init__(self):</span><br><span class="line">        # 初始化ROS节点，命名为&#x27;object_position_node&#x27;，并设置为匿名节点</span><br><span class="line">        rospy.init_node(&#x27;object_position_node&#x27;, anonymous=True)</span><br><span class="line">        # 创建一个订阅者，订阅/object_position话题，消息类型为Point，回调函数为find_cb</span><br><span class="line">        self.find_sub = rospy.Subscriber(&#x27;/object_position&#x27;, Point, self.find_cb)</span><br><span class="line">        # 创建一个发布者，用于发布Twist类型的消息到/cmd_vel话题</span><br><span class="line">        self.pub = rospy.Publisher(&quot;/cmd_vel&quot;, Twist, queue_size=1000)</span><br><span class="line"></span><br><span class="line">    # /object_position话题的回调函数</span><br><span class="line">    def find_cb(self, data):</span><br><span class="line">        global flog0, flog1</span><br><span class="line">        # 获取接收到的Point消息</span><br><span class="line">        point_msg = data</span><br><span class="line">        # 计算目标点与图像中心的偏差</span><br><span class="line">        flog0 = point_msg.x - 320</span><br><span class="line">        # 计算偏差的绝对值</span><br><span class="line">        flog1 = abs(flog0)</span><br><span class="line">        # 如果偏差的绝对值大于0.5</span><br><span class="line">        if abs(flog1) &gt; 0.5:</span><br><span class="line">            # 创建一个Twist消息</span><br><span class="line">            msg = Twist()</span><br><span class="line">            # 设置消息的角速度为偏差乘以0.01</span><br><span class="line">            msg.angular.z = -0.01 * flog0</span><br><span class="line">            # 发布Twist消息</span><br><span class="line">            self.pub.publish(msg)</span><br><span class="line">        # 如果偏差的绝对值小于等于0.5</span><br><span class="line">        elif abs(flog1) &lt;= 0.5:</span><br><span class="line">            # 发送射击指令</span><br><span class="line">            ser.write(b&#x27;\x55\x01\x12\x00\x00\x00\x01\x69&#x27;)</span><br><span class="line">            print (&#x27;打印射击&#x27;)</span><br><span class="line">            # 等待0.1秒</span><br><span class="line">            time.sleep(0.08)</span><br><span class="line">            # 发送停止射击指令</span><br><span class="line">            ser.write(b&#x27;\x55\x01\x11\x00\x00\x00\x01\x68&#x27;)</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    try:</span><br><span class="line">        # 创建object_position对象</span><br><span class="line">        object_position = object_position()</span><br><span class="line">        # 进入ROS事件循环</span><br><span class="line">        rospy.spin()</span><br><span class="line">    except rospy.ROSInterruptException:</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="机器人移动方法1"><a href="#机器人移动方法1" class="headerlink" title="机器人移动方法1"></a>机器人移动方法1</h1><p>机器人循环移动，脚本放在abot_ws&#x2F;src&#x2F;robot_slam&#x2F;scripts&#x2F;move_demo.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding: utf-8</span></span><br><span class="line"><span class="comment"># 上面两行是为了告诉操作系统，这是一个Python脚本，并且使用UTF-8编码</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">from</span> geometry_msgs.msg <span class="keyword">import</span> Twist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义移动机器人的函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">move_robot</span>(<span class="params">linear_x, angular_z</span>):</span><br><span class="line">    <span class="comment"># 初始化ROS节点，命名为&#x27;move_robot_node&#x27;，并设置为匿名节点</span></span><br><span class="line">    rospy.init_node(<span class="string">&#x27;move_robot_node&#x27;</span>, anonymous=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># 创建一个发布者，用于发布Twist类型的消息到/cmd_vel话题</span></span><br><span class="line">    velocity_publisher = rospy.Publisher(<span class="string">&#x27;/cmd_vel&#x27;</span>, Twist, queue_size=<span class="number">10</span>)</span><br><span class="line">    <span class="comment"># 设置ROS发布频率为10Hz</span></span><br><span class="line">    rate = rospy.Rate(<span class="number">10</span>)  </span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建一个Twist消息，设置线速度和角速度</span></span><br><span class="line">    vel_msg = Twist()</span><br><span class="line">    vel_msg.linear.x = linear_x</span><br><span class="line">    vel_msg.angular.z = angular_z</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 循环发布消息，直到节点被关闭</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> rospy.is_shutdown():</span><br><span class="line">        velocity_publisher.publish(vel_msg)</span><br><span class="line">        rate.sleep()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 设置线速度和角速度</span></span><br><span class="line">        linear_x = <span class="number">0.2</span>   <span class="comment"># 线速度</span></span><br><span class="line">        angular_z = <span class="number">0.5</span>  <span class="comment"># 角速度</span></span><br><span class="line">        <span class="comment"># 调用move_robot函数，控制机器人移动</span></span><br><span class="line">        move_robot(linear_x, angular_z)</span><br><span class="line">    <span class="keyword">except</span> rospy.ROSInterruptException:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="机器人移动方法2"><a href="#机器人移动方法2" class="headerlink" title="机器人移动方法2"></a>机器人移动方法2</h1><p>机器人指定移动，脚本放在abot_ws&#x2F;src&#x2F;robot_slam&#x2F;scripts&#x2F;move_robot.py</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line">#coding: utf-8</span><br><span class="line"># 上面两行是为了告诉操作系统，这是一个Python脚本，并且使用UTF-8编码</span><br><span class="line"></span><br><span class="line">import rospy</span><br><span class="line">from geometry_msgs.msg import Twist</span><br><span class="line"></span><br><span class="line">class move_robot:</span><br><span class="line">    def __init__(self):</span><br><span class="line">        # 初始化ROS节点，命名为&#x27;move_robot_node&#x27;，并设置为匿名节点</span><br><span class="line">        rospy.init_node(&#x27;move_robot_node&#x27;, anonymous=True)</span><br><span class="line">        # 创建一个发布者，用于发布Twist类型的消息到/cmd_vel话题</span><br><span class="line">        self.pub = rospy.Publisher(&quot;/cmd_vel&quot;, Twist, queue_size=1000)</span><br><span class="line"></span><br><span class="line">    # 控制机器人移动的回调函数</span><br><span class="line">    def move_cb(self):</span><br><span class="line">        global time</span><br><span class="line">        # 初始化时间变量</span><br><span class="line">        time = 0</span><br><span class="line">        # 创建一个Twist消息</span><br><span class="line">        msg = Twist()</span><br><span class="line">        msg.linear.x = 1.0</span><br><span class="line">        msg.linear.y = 0.0</span><br><span class="line">        msg.linear.z = 0.0</span><br><span class="line">        msg.angular.x = 0.0</span><br><span class="line">        msg.angular.y = 0.0</span><br><span class="line">        msg.angular.z = 0.0</span><br><span class="line">        # 控制机器人移动，持续1秒</span><br><span class="line">        while time &lt; 10:</span><br><span class="line">            self.pub.publish(msg)</span><br><span class="line">            rospy.sleep(0.1)</span><br><span class="line">            time += 1</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    try:</span><br><span class="line">        # 创建move_robot对象</span><br><span class="line">        move = move_robot()</span><br><span class="line">        # 调用move_cb函数，控制机器人移动</span><br><span class="line">        move.move_cb()</span><br><span class="line">    except rospy.ROSInterruptException:</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">、</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
