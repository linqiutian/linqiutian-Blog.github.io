<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux驱动基础知识</title>
      <link href="/2024/08/07/Linux%E9%A9%B1%E5%8A%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/2024/08/07/Linux%E9%A9%B1%E5%8A%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="1-指令"><a href="#1-指令" class="headerlink" title="1.指令"></a>1.指令</h1><h2 id="1-1-常用的Linux指令"><a href="#1-1-常用的Linux指令" class="headerlink" title="1.1 常用的Linux指令"></a>1.1 常用的Linux指令</h2><h3 id="1-怎么查看当前进程？怎么执行退出？怎么查看当前路径？"><a href="#1-怎么查看当前进程？怎么执行退出？怎么查看当前路径？" class="headerlink" title="1.怎么查看当前进程？怎么执行退出？怎么查看当前路径？"></a>1.怎么查看当前进程？怎么执行退出？怎么查看当前路径？</h3><p>查看当前进程： <code>ps</code><br>执行退出： <code>exit</code><br>查看当前路径： <code>pwd</code></p><h3 id="2-ls-命令执行什么功能？-可以带哪些参数？"><a href="#2-ls-命令执行什么功能？-可以带哪些参数？" class="headerlink" title="2.ls 命令执行什么功能？ 可以带哪些参数？"></a>2.<strong>ls 命令执行什么功能？ 可以带哪些参数？</strong></h3><p><strong>功能</strong></p><p>列出指定目录中的目录，以及文件</p><p><strong>参数</strong></p><p><code>-a</code> 显示所有文件及目录 (. 开头的隐藏文件也会列出)</p><p><code>-l</code> 除文件名称外，亦将文件型态、权限、拥有者、文件大小等资讯详细列出</p><p><code>-r</code> 将文件以相反次序显示(原定依英文字母次序)</p><p><code>-t</code> 将文件依建立时间之先后次序列出</p><ol><li><code>-A</code> 同 -a ，但不列出 “.” (目前目录) 及 “…” (父目录)</li><li><code>-F</code> 在列出的文件名称后加一符号；例如可执行档则加 “*”, 目录则加 “&#x2F;”</li><li><code>-R</code> 若目录下有文件，则以下之文件亦皆依序列出</li></ol><p><code>../abc/abc.txt (..表示上一层)</code></p><h3 id="3-创建目录用什么命令？"><a href="#3-创建目录用什么命令？" class="headerlink" title="3.创建目录用什么命令？"></a>3.<strong>创建目录用什么命令？</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir runoob        #在工作目录下，建立一个名为 runoob 的子目录 </span><br><span class="line">mkdir -p runoob2/test   #在工作目录下的 runoob2 目录中，建立一个名为 test 的子目录。</span><br><span class="line">若 runoob2 目录原本不存在，则建立一个。（注：本例若不加 -p 参数，且原本 runoob2 目录不存在，则产生错误。）</span><br></pre></td></tr></table></figure><h3 id="4-创建文件用什么命令？"><a href="#4-创建文件用什么命令？" class="headerlink" title="4.创建文件用什么命令？"></a>4.<strong>创建文件用什么命令？</strong></h3><p><strong>vi或vim</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi file1.txt #直接创建并打开一个文件file1.txt</span><br></pre></td></tr></table></figure><p><strong>touch</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch file2.txt #创建新的空文件file2.txt</span><br></pre></td></tr></table></figure><p><strong>echo</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;this is a new file&quot; &gt; file3.txt   #创建文件file3.txt并将this is a new file写入（说明：使用&gt;指令覆盖文件原内容并重新输入内容，若文件不存在则创建文件。）</span><br><span class="line">echo &quot;add contents&quot; &gt;&gt;file3.txt    #在已存在的文件补充写入新内容add contents（说明：使用&gt;&gt;指令向文件追加内容，原内容将保存。）</span><br></pre></td></tr></table></figure><p><strong>less 、more 、cat</strong></p><p>三者都是将文件内容输出到标准输出，其中less和more可以分页显示，cat是显示全部。<br>三者可以根据已经存在的文件创建新的文件。假设已经存在文件1.txt。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat 1.txt &gt; 2.txt</span><br><span class="line">less 1.txt &gt; 3.txt</span><br><span class="line">more 1.txt &gt; 4.txt</span><br></pre></td></tr></table></figure><p>此时创建的文件内容都和1.txt中文件内容相同。</p><p>cd</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &gt; file3.txt  #创建新的空文件file3.txt</span><br><span class="line">cd &gt;&gt; file4.txt  #创建新的空文件file4.txt</span><br></pre></td></tr></table></figure><p>cd最主要的作用是切换目录，在cd后面跟&gt;或&gt;&gt;再加上文件名就可以创建一个内容为空的文件。它和echo的区别之处在于<strong>echo可写文件内容，而cd并不能</strong>。</p><h3 id="5-复制文件用什么命令？"><a href="#5-复制文件用什么命令？" class="headerlink" title="5.复制文件用什么命令？"></a>5.<strong>复制文件用什么命令</strong>？</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">cp –r test/ newtest #将当前目录 test/ 下的所有文件复制到新目录 newtest 下(前-&gt;后)</span><br></pre></td></tr></table></figure><h3 id="6-查看文件内容有哪些命令可以使用？"><a href="#6-查看文件内容有哪些命令可以使用？" class="headerlink" title="6.查看文件内容有哪些命令可以使用？"></a>6.<strong>查看文件内容有哪些命令可以使用</strong>？</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi 文件名  #编辑方式查看，可修改</span><br><span class="line">cat 文件名 #显示全部文件内容</span><br><span class="line">more 文件名 #分页显示文件内容</span><br><span class="line">less 文件名 #与 more 相似，更好的是可以往前翻页</span><br><span class="line">tail 文件名 #仅查看尾部，还可以指定行数</span><br><span class="line">head 文件名 #仅查看头部,还可以指定行数</span><br></pre></td></tr></table></figure><h3 id="7-怎么向屏幕输出带空格的字符串，比如”hello-world”"><a href="#7-怎么向屏幕输出带空格的字符串，比如”hello-world”" class="headerlink" title="7.怎么向屏幕输出带空格的字符串，比如”hello world”?"></a>7.怎么向屏幕输出带空格的字符串，比如”hello world”?</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo hello world</span><br></pre></td></tr></table></figure><h3 id="8-移动文件用哪个命令？改名用哪个命令？"><a href="#8-移动文件用哪个命令？改名用哪个命令？" class="headerlink" title="8.移动文件用哪个命令？改名用哪个命令？"></a>8.移动文件用哪个命令？改名用哪个命令？</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mv source_file(文件) dest_file(文件) #将源文件名 source_file 改为目标文件名 dest_file</span><br><span class="line">mv source_file(文件) dest_directory(目录) #将文件 source_file 移动到目标目录 dest_directory 中</span><br></pre></td></tr></table></figure><h3 id="9-删除文件用哪个命令？如果需要连目录及目录下文件一块删除呢？删除空文件夹用什么命令？"><a href="#9-删除文件用哪个命令？如果需要连目录及目录下文件一块删除呢？删除空文件夹用什么命令？" class="headerlink" title="9.删除文件用哪个命令？如果需要连目录及目录下文件一块删除呢？删除空文件夹用什么命令？"></a>9.删除文件用哪个命令？如果需要连目录及目录下文件一块删除呢？删除空文件夹用什么命令？</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">rm -rf file/directory    #删除当前目录下的所有文件及目录，并且是直接删除，无需逐一确认</span><br><span class="line">rm -rf  directory/       #删除目录 directory，不管该目录下是否有子目录或文件</span><br></pre></td></tr></table></figure><h3 id="10-查找文件内容用哪个命令？"><a href="#10-查找文件内容用哪个命令？" class="headerlink" title="10.查找文件内容用哪个命令？"></a>10.查找文件内容用哪个命令？</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">grep test *file  #在当前目录中，查找后缀有 file 字样的文件中包含 test 字符串的文件，并打印出该字符串的行</span><br><span class="line">grep -r update /etc/acpi #查找指定目录/etc/acpi 及其子目录（如果存在子目录的话）下所有文件中包含字符串&quot;update&quot;的文件(递归)</span><br><span class="line">grep -v test *test*      #查找文件名中包含 test 的文件中不包含test 的行(排除)</span><br></pre></td></tr></table></figure><h3 id="11-查找文件用哪个命令？"><a href="#11-查找文件用哪个命令？" class="headerlink" title="11.查找文件用哪个命令？"></a>11.查找文件用哪个命令？</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">find . -name &quot;*.c&quot;  #将当前目录及其子目录下所有文件后缀为 .c 的文件列出来</span><br><span class="line">find . -ctime -20   #将当前目录及其子目录下所有最近 20 天内更新过的文件列出</span><br></pre></td></tr></table></figure><h3 id="12-cat命令"><a href="#12-cat命令" class="headerlink" title="12.cat命令"></a>12.cat命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">cat -n textfile1  #把 textfile1 的文档内容加上行号后输入到屏幕</span><br><span class="line">cat -n textfile1 &gt; textfile2  #把 textfile1 的文档内容加上行号后输入 textfile2 这个文档里</span><br><span class="line">cat -b textfile1 textfile2 &gt;&gt; textfile3  #把 textfile1 和 textfile2 的文档内容加上行号（空白行不加）之后将内容附加到 textfile3 文档里</span><br><span class="line">cat /dev/null &gt; /etc/test.txt #清空 /etc/test.txt 文档内容</span><br></pre></td></tr></table></figure><h2 id="1-2-常用的GCC指令"><a href="#1-2-常用的GCC指令" class="headerlink" title="1.2 常用的GCC指令"></a>1.2 常用的GCC指令</h2><h3 id="1-预处理-E-i"><a href="#1-预处理-E-i" class="headerlink" title="1.预处理 (-E .i)"></a>1.预处理 (-E .i)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -E test.c -o test.i #把预处理的结果导出到test.i文件</span><br></pre></td></tr></table></figure><h3 id="2-编译为汇编代码-S-s"><a href="#2-编译为汇编代码-S-s" class="headerlink" title="2.编译为汇编代码(-S .s)"></a>2.编译为汇编代码(-S .s)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -S test.i -o test.s #编译器将test.i翻译成汇编语言，并将结果存储在test.s文件中。</span><br></pre></td></tr></table></figure><h3 id="3-汇编-c-o"><a href="#3-汇编-c-o" class="headerlink" title="3.汇编(-c .o)"></a>3.汇编(-c .o)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -c test.s -o test.o #将汇编代码编译为目标文件（.o）但不链接</span><br></pre></td></tr></table></figure><h3 id="4-链接-无后缀"><a href="#4-链接-无后缀" class="headerlink" title="4.链接(无后缀)"></a>4.链接(无后缀)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc test.o -o test #将生成的目标文件test.o生成最终的可执行文件test</span><br></pre></td></tr></table></figure><h3 id="5-一步到位编译-c-无后缀"><a href="#5-一步到位编译-c-无后缀" class="headerlink" title="5.一步到位编译(.c 无后缀)"></a>5.一步到位编译(.c 无后缀)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc test.c -o test #将源文件test.c编译链接为可执行文件test</span><br></pre></td></tr></table></figure><h3 id="6-多文件编译"><a href="#6-多文件编译" class="headerlink" title="6.多文件编译"></a>6.多文件编译</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc test1.c test2.c -o test</span><br></pre></td></tr></table></figure><h3 id="7-警告处理"><a href="#7-警告处理" class="headerlink" title="7.警告处理"></a>7.警告处理</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gcc -w test.c -o test  # 忽略编译时的警告</span><br><span class="line">gcc -Wall test.c -o test #编译后显示所有警告</span><br><span class="line">gcc -Werror test.c -o test #在产生警告的地方停止编译</span><br></pre></td></tr></table></figure><h2 id="1-3常用的GDB调试指令"><a href="#1-3常用的GDB调试指令" class="headerlink" title="1.3常用的GDB调试指令"></a>1.3常用的GDB调试指令</h2><h3 id="1-什么是GDB？"><a href="#1-什么是GDB？" class="headerlink" title="1.什么是GDB？"></a>1.什么是GDB？</h3><ul><li><p>GDB（GNU symbolic debugger）是 GNU Project 调试器</p></li><li><p>GNU操作系统是一种由自由软件构成的类 Unix 操作系统</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">gcc -g test.c -o test  #编译时生成debug有关的程序信息</span><br><span class="line">gdb test        #启动调试</span><br><span class="line">help #查看命令帮助，具体命令查询在gdb中输入help + 命令,简写h</span><br><span class="line">run #重新开始运行文件（run-text：加载文本文件，run-bin：加载二进制文件）,简写r</span><br><span class="line">start #单步执行，运行程序，停在第一执行语句</span><br><span class="line">list #查看原代码（list-n,从第n行开始查看代码。list+ 函数名：查看具体函数）,简写l</span><br><span class="line">set #设置变量的值</span><br><span class="line">next #单步调试（逐过程，函数直接执行）,简写n</span><br><span class="line">step #单步调试（逐语句：跳入自定义函数内部执行）,简写s</span><br><span class="line">backtrace #查看函数的调用的栈帧和层级关系,简写bt</span><br><span class="line">frame #切换函数的栈帧,简写f</span><br><span class="line">info #查看函数内部局部变量的数值,简写i</span><br><span class="line">finish #结束当前函数，返回到函数调用点</span><br><span class="line">continue #继续运行,简写c</span><br><span class="line">print #打印值及地址,简写p</span><br><span class="line">quit #退出gdb,简写q</span><br><span class="line">break+num #在第num行设置断点,简写b</span><br><span class="line">info breakpoints #查看当前设置的所有断点</span><br><span class="line">delete breakpoints num #删除第num个断点,简写d</span><br><span class="line">display #追踪查看具体变量值</span><br><span class="line">undisplay #取消追踪观察变量</span><br><span class="line">watch #被设置观察点的变量发生修改时，打印显示</span><br><span class="line">i watch #显示观察点</span><br><span class="line">enable breakpoints #启用断点</span><br><span class="line">disable breakpoints #禁用断点</span><br><span class="line">x #查看内存x/20xw 显示20个单元，16进制，4字节每单元</span><br><span class="line">run argv[1] argv[2] #调试时命令行传参</span><br><span class="line">set follow-fork-mode child #Makefile项目管理：选择跟踪父子进程(fork())</span><br></pre></td></tr></table></figure></li></ul><h2 id="1-4常用的驱动开发指令"><a href="#1-4常用的驱动开发指令" class="headerlink" title="1.4常用的驱动开发指令"></a>1.4常用的驱动开发指令</h2><h3 id="1-加载-卸载驱动"><a href="#1-加载-卸载驱动" class="headerlink" title="1.加载&#x2F;卸载驱动"></a>1.加载&#x2F;卸载驱动</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">insmod/modprobe #加载驱动</span><br><span class="line">rmmod   #卸载驱动Linux驱动如何查看驱动模块中打印信息？</span><br></pre></td></tr></table></figure><h3 id="2-Linux驱动如何查看驱动模块中打印信息？"><a href="#2-Linux驱动如何查看驱动模块中打印信息？" class="headerlink" title="2.Linux驱动如何查看驱动模块中打印信息？"></a>2.Linux驱动如何查看驱动模块中打印信息？</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dmesg</span><br></pre></td></tr></table></figure><h3 id="3-如何查看内核中已有的字符设备的信息？"><a href="#3-如何查看内核中已有的字符设备的信息？" class="headerlink" title="3.如何查看内核中已有的字符设备的信息？"></a>3.如何查看内核中已有的字符设备的信息？</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsmod 和modprobe：lsmod可以查看模块的依赖关系，modprobe在加载模块时会加载其他依赖的模块。</span><br></pre></td></tr></table></figure><h3 id="4-如何查看正在使用的有哪些中断号？"><a href="#4-如何查看正在使用的有哪些中断号？" class="headerlink" title="4.如何查看正在使用的有哪些中断号？"></a>4.如何查看正在使用的有哪些中断号？</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/interrupt</span><br></pre></td></tr></table></figure><h1 id="2-Uboot"><a href="#2-Uboot" class="headerlink" title="2.Uboot"></a>2.Uboot</h1><h3 id="2-1-什么是bootloader？"><a href="#2-1-什么是bootloader？" class="headerlink" title="2.1 什么是bootloader？"></a>2.1 什么是bootloader？</h3><ul><li>Linux系统要启动就必须需要一个 bootloader程序，也就说芯片上电以后先运行一段bootloader程序。这段 bootloader程序会先<strong>初始化时钟，看门狗，中断，SDRAM，等外设，然后将 Linux内核从 flash（NAND, NOR FLASH,SD,MMC等）拷贝到SDRAM中，最后启动Linux内核</strong>。当然了， bootloader的实际工作要复杂的多，但是它最主要的工作就是启动 Linux内核。</li><li>bootloader和 Linux内核的关系就跟PC上的BIOS和 Windows的关系一样，<strong>bootloader就相当于BIOS。总得来说，Bootloader就是一小段程序，它在系统上电时开始执行，初始化硬件设各、准备好软件环境，最后调用操作系统内核</strong>。</li></ul><h3 id="2-2-uboot启动过程中做了那些事？"><a href="#2-2-uboot启动过程中做了那些事？" class="headerlink" title="2.2 uboot启动过程中做了那些事？"></a>2.2 uboot启动过程中做了那些事？</h3><h4 id="1-第一阶段"><a href="#1-第一阶段" class="headerlink" title="1.第一阶段"></a>1.<strong>第一阶段</strong></h4><p>初始化时钟，关闭看门狗，关中断，启动ICACHE，关闭DCACHE和TLB，关闭MMU，初始化SDRAM，初始化NAND FLASH，重定位。</p><blockquote><p>Linux的看门狗（Watchdog）是一种硬件或软件机制，用于监视系统的运行状态，以防止系统出现故障或死机的情况。它能够检测到系统的异常情况并自动采取一些预设的措施，例如重启系统或发送警报信息。</p></blockquote><h4 id="2-第二阶段"><a href="#2-第二阶段" class="headerlink" title="2.第二阶段"></a>2.<strong>第二阶段</strong></h4><p>初始化一个串口，检测系统内存映射，将<strong>内核映象和根文件系统映象从Flash上读到SDRAM空间</strong>中，为内核设置启动参数，调用内核。</p><h3 id="2-3-uboot和内核如何完成参数传递？"><a href="#2-3-uboot和内核如何完成参数传递？" class="headerlink" title="2.3 uboot和内核如何完成参数传递？"></a>2.3 uboot和内核如何完成参数传递？</h3><ul><li>uboot启动后已经完成了基本的硬件初始化（如：内存、串口等），接下来，它的主要任务就是加载Linux内核到开发板的内存，然后跳转到Linux内核所在的地址运行。<br><em><strong>PS:只要问到uboot，面试官必问uboot和内核的参数传递，所以一定要知道！</strong></em><br>具体是如何跳转呢？做法很简单，直接修改PC寄存器的值为Linux内核所在的地址，这样CPU就会从Linux内核所在的地址去取指令，从而执行内核代码。</li></ul><h3 id="在前面我们已经知道，在跳转到内核以前，uboot需要做好以下三件事情："><a href="#在前面我们已经知道，在跳转到内核以前，uboot需要做好以下三件事情：" class="headerlink" title="在前面我们已经知道，在跳转到内核以前，uboot需要做好以下三件事情："></a>在前面我们已经知道，在跳转到内核以前，uboot需要做好以下三件事情：</h3><h4 id="1-CPU寄存器的设置"><a href="#1-CPU寄存器的设置" class="headerlink" title="1.CPU寄存器的设置"></a>1.<strong>CPU寄存器的设置</strong></h4><p>R0&#x3D;0<br>R1&#x3D;机器类型ID；对于ARM结构的CPU，其机器类型ID可以参见 linux&#x2F;arch&#x2F;arm tools&#x2F; mach-types<br>R2&#x3D;启动参数标记列表在RAM中起始基地址</p><h4 id="2-CPU工作模式"><a href="#2-CPU工作模式" class="headerlink" title="2.CPU工作模式"></a>2.CPU工作模式</h4><p>必须禁止中断（IRQs和FIQs）</p><p>CPU必须是SVC模式</p><h4 id="3-Cache和MMU的设置"><a href="#3-Cache和MMU的设置" class="headerlink" title="3.Cache和MMU的设置"></a>3.Cache和MMU的设置</h4><p>MMU必须关闭</p><p>指令Cache可以打开也可以关闭</p><p>数据Cache必须关闭</p><p>其中上面第一步CPU寄存器的设置中，就是通过R0，R1，R2三个参数给内核传递参数的。</p><h3 id="2-4-为什么要给内核传递参数呢？"><a href="#2-4-为什么要给内核传递参数呢？" class="headerlink" title="2.4 为什么要给内核传递参数呢？"></a>2.4 为什么要给内核传递参数呢？</h3><ul><li>在此之前，uboot已经完成了硬件的初始化，可以说已经”适应了“这块开发板。然而，内核并不是对于所有的开发板都能完美适配的（如果适配了，可想而知这个内核有多庞大，又或者有新技术发明了，可以完美的适配各种开发板），此时，对于开发板的环境一无所知。所以，要想启动Linux内核，uboot必须要给内核传递一些必要的信息来告诉内核<strong>当前所处的环境</strong>。</li></ul><h3 id="2-5-如何给内核传递参数？"><a href="#2-5-如何给内核传递参数？" class="headerlink" title="2.5 如何给内核传递参数？"></a>2.5 如何给内核传递参数？</h3><ul><li>uboot把<strong>机器ID通过R1传递给内核</strong>，Linux内核运行的时候，首先就从R1中读取机器ID来判断是否支持当前机器。这个机器ID实际上就是开发板<strong>CPU的ID</strong>，每个厂家生产出一款CPU的时候都会给它指定一个唯一的ID，大家可以到uboot源码的<code>arch\arm\include\asm\mach-type.h</code>文件中去查看。</li><li><img src="/./../images/v2-05f40fd62252ed704e07aa09b450735d_720w.webp" alt="img"></li><li><strong>R2存放的是块内存的基地址</strong>，这块内存中存放的是uboot给Linux内核的其他参数。这些参数有内存的<strong>起始地址、内存大小、Linux内核启动后挂载文件系统的方式</strong>等信息。很明显，参数有多个，不同的参数有不同的内容，为了让Linux内核能精确的解析出这些参数，双方在传递参数的时候要求参数在存放的时候需要按照<strong>双方规定的格式存放</strong>。</li><li>除了约定好参数存放的地址外，还要<strong>规定参数的结构</strong>。Linux2.4.x以后的内核都期望以<strong>标记列表</strong>（tagged_list）的形式来传递启动参数。标记，就是一种数据结构；标记列表，就是挨着存放的多个标记。标记列表以标记<code>ATAG_CORE</code>开始，以标记<code>ATAG_NONE</code>结束。</li><li>标记的数据结构为tag，它<strong>由一个tag_header结构和一个联合（union）组成</strong>。tag_header结构表示标记的类型及长度，比如是表示内存还是表示命令行参数等。对于不同类型的标记使用不同的联合（union），比如表示内存时使用tag_ mem32，表示命令行时使用 tag_cmdline。具体代码见<code>arch\arm\include\asm\setup.h</code>。</li><li><img src="/./../images/v2-29c0c35bd33589c2e82f11e54b9e5243_720w.webp" alt="img"></li><li>从上面可以看出，struct_tag结构体由structtag_header+联合体union构成，结构体struct tag_header用来描述每个tag的头部信息，如tag的类型，tag大小。联合体union用来描述每个传递给Linux内核的参数信息。</li></ul><h3 id="2-6-为什么uboot要关掉caches？"><a href="#2-6-为什么uboot要关掉caches？" class="headerlink" title="2.6 为什么uboot要关掉caches？"></a>2.6 为什么uboot要关掉caches？</h3><ul><li>caches是cpu内部的一个2级缓存，它的作用是将常用的数据和指令放在cpu内部。caches是通过 ARM处理器使用协处理器15（CP15）管理的，刚上电的时候，cpu还不能管理caches。上电的时候指令cache可关闭，也可不关闭，但<strong>数据cache一定要关闭</strong>，否则可能导致刚开始的代码里面，去取数据的时候，从cache里面取，而这时候<strong>RAM中数据还没有caches过来，导致数据预取异常</strong>。</li></ul><h1 id="3-文件系统"><a href="#3-文件系统" class="headerlink" title="3.文件系统"></a>3.文件系统</h1><h3 id="3-1-什么是根文件系统？"><a href="#3-1-什么是根文件系统？" class="headerlink" title="3.1 什么是根文件系统？"></a>3.1 什么是根文件系统？</h3><ul><li>根文件系统首先是一种文件系统，该文件系统不仅具有普通文件系统的存储数据文件的功能，但是相对于普通的文件系统，它的特殊之处在于，它是<strong>内核启动时所挂载（mount）的第一个文件系统</strong>，内核代码的映像文件保存在根文件系统中，系统引导启动程序会在根文件系统挂载之后从中把一些<strong>初始化脚本（如rcS、inittab）和服务</strong>加载到内存中去运行，里面包含了Linux系统能够运行<strong>所必需的应用程序、库</strong>等，比如可以给用户提供操作 Linux的控制界面的shell程序、动态连接的程序运行时需要的glibc库等。</li><li>文件系统和内核是完全独立的两个部分。在嵌入式中移植的内核下载到开发板上，是没有办法真正的启动Linux操作系统的，会出现无法加载文件系统的错误。</li></ul><h3 id="3-2-根文件系统为什么这么重要？"><a href="#3-2-根文件系统为什么这么重要？" class="headerlink" title="3.2 根文件系统为什么这么重要？"></a>3.2 根文件系统为什么这么重要？</h3><ul><li>根文件系统之所以在前面加一个“根”，说明它是加载其它文件系统的“根”，那么<strong>如果没有这个根，其它的文件系统也就没有办法进行加载的</strong>。根文件系统包含系统启动时<strong>所必须的目录和关键性的文件</strong>，以及使其他文件系统得以挂载（mount）所必要的文件。例如：<ul><li>init进程的应用程序必须运行在根文件系统上。</li><li>根文件系统提供了根目录“&#x2F;”。</li><li>linux挂载分区时所依赖的信息存放于根文件系统<code>/etc/fstab</code>这个文件中。</li><li>shell命令程序必须运行在根文件系统上，譬如<code>ls</code>、<code>cd</code>等命令。</li></ul></li><li>总结：一套linux体系，只有内核本身是不能工作的，必须要rootfs（上的etc目录下的配置文件、<code>/bin/sbin</code>等目录下的shell命令，还有&#x2F;lib目录下的库文件等）相配合才能工作。</li></ul><h3 id="3-3-可执行映像文件通常由几部分构成，它们有什么特点？"><a href="#3-3-可执行映像文件通常由几部分构成，它们有什么特点？" class="headerlink" title="3.3 可执行映像文件通常由几部分构成，它们有什么特点？"></a>3.3 可执行映像文件通常由几部分构成，它们有什么特点？</h3><p>可执行映像文件通常由以下几部分构成：</p><ul><li>一个或多个代码段，代码段的属性为只读。</li><li>零个或多个包含初始化数据的数据段，数据段的属性为可读写。</li><li>零个或多个不包含初始化数据的数据段，数据段的属性为可读写。</li></ul><h1 id="4-中断"><a href="#4-中断" class="headerlink" title="4.中断"></a>4.中断</h1><h3 id="4-1-硬中断-软中断是什么？有什么区别？"><a href="#4-1-硬中断-软中断是什么？有什么区别？" class="headerlink" title="4.1 硬中断 &#x2F; 软中断是什么？有什么区别？"></a>4.1 硬中断 &#x2F; 软中断是什么？有什么区别？</h3><h3 id="1-硬中断"><a href="#1-硬中断" class="headerlink" title="1.硬中断"></a>1.<strong>硬中断</strong></h3><ol><li>硬中断是由<strong>硬件</strong>产生的，比如，像磁盘，网卡，键盘，时钟等。<strong>每个设备或设备集都有它自己的IRQ</strong>（中断请求）。基于IRQ，CPU可以将相应的请求分发到对应的硬件驱动上（注：硬件驱动通常是内核中的一个子程序，而不是一个独立的进程）。</li><li>处理中断的驱动是需要运行在CPU上的，因此，当中断产生的时候，CPU会中断当前正在运行的任务，来处理中断。在有多核心的系统上，<strong>一个中断通常只能中断一颗CPU</strong>（也有一种特殊的情况，就是在大型主机上是有硬件通道的，它可以在没有主CPU的支持下，可以同时处理多个中断。）。</li><li><strong>硬中断可以直接中断CPU</strong>。它会引起内核中相关的代码被触发。对于那些需要花费一些时间去处理的进程，中断代码本身也可以被其他的硬中断中断。</li><li>对于时钟中断，内核调度代码会将当前正在运行的进程挂起，从而让其他的进程来运行。它的存在是为了让<strong>调度代码（或称为调度器）可以调度多任务</strong>。</li></ol><h3 id="2-软中断"><a href="#2-软中断" class="headerlink" title="2.软中断"></a>2.<strong>软中断</strong></h3><ol><li>软中断的处理非常像硬中断。然而，它们仅仅是由<strong>当前正在运行的进程</strong>所产生的。</li><li><strong>通常，软中断是一些对I&#x2F;O的请求</strong>。这些请求会调用内核中可以调度I&#x2F;O发生的程序。<strong>对于某些设备，I&#x2F;O请求需要被立即处理，而磁盘I&#x2F;O请求通常可以排队并且可以稍后处理</strong>。根据I&#x2F;O模型的不同，进程或许会被挂起直到I&#x2F;O完成，此时内核调度器就会选择另一个进程去运行。I&#x2F;O可以在进程之间产生。并且调度过程通常和磁盘I&#x2F;O的方式是相同。</li><li><strong>软中断仅与内核相联系</strong>。而内核主要负责对需要运行的任何其他的进程进行调度。一些内核允许设备驱动的一些部分存在于用户空间，并且当需要的时候内核也会调度这个进程去运行。<ol><li>软中断并不会直接中断CPU。也<strong>只有当前正在运行的代码（或进程）才会产生软中断</strong>。这种中断是一种<strong>需要内核为正在运行的进程去做一些事情</strong>（通常为I&#x2F;.O）的请求。有一个特殊的软中断是Yield调用，它的作用是请求内核调度器去查看是否有一些其他的进程可以运行。</li></ol></li></ol><blockquote><p>说人话就是只会影响内核去间接调度CPU，而不会直接中断CPU去处理中断服务程序</p></blockquote><h3 id="3-区别"><a href="#3-区别" class="headerlink" title="3.区别"></a>3.区别</h3><ol><li>软中断是执行<strong>中断指令</strong>产生的，而硬中断是由<strong>外设</strong>引发的。</li><li>硬中断的中断号是由<strong>中断控制器</strong>提供的，软中断的中断号由指令直接指出，无需使用中断控制器。</li><li>硬中断是<strong>可屏蔽</strong>的，软中断不可屏蔽。</li><li>硬中断处理程序要确保它能<strong>快速</strong>地完成任务，这样程序执行时才不会等待较长时间，称为<strong>上半部</strong>。</li><li>软中断处理<strong>硬中断未完成的工作</strong>，是一种推后执行的机制，属于<strong>下半部</strong>。</li></ol><h3 id="4-2-中断为什么要区分上半部和下半部？"><a href="#4-2-中断为什么要区分上半部和下半部？" class="headerlink" title="4.2 中断为什么要区分上半部和下半部？"></a>4.2 中断为什么要区分上半部和下半部？</h3><ul><li>Linux中断分为硬件中断和内部中断（异常），调用过程：<strong>外部中断产生-&gt;发送中断信号到中断控制器-&gt;通知处理器产生中断的中断信号</strong>，让其进一步处理。</li><li>对于中断上半部和下半部的产生，为了中断处理过程中被新的中断打断，将中断处理一分为二，<strong>上半部登记新的中断，快速处理简单的任务，剩余复杂耗时的处理留给下半部处理，下半部处理过程中可以被中断，上半部处理时不可被中</strong>断。</li></ul><h3 id="4-3-中断下半部一般如何实现？"><a href="#4-3-中断下半部一般如何实现？" class="headerlink" title="4.3 中断下半部一般如何实现？"></a>4.3 中断下半部一般如何实现？</h3><ul><li><strong>软中断、tasklet、工作队列</strong></li><li>详细解释<a href="https://blog.csdn.net/qq_16933601/article/details/107239908?ops_request_misc=%7B%22request_id%22:%22161962026516780264032212%22,%22scm%22:%2220140713.130102334.pc_blog.%22%7D&request_id=161962026516780264032212&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_v2~rank_v29-1-107239908.pc_v2_rank_blog_default&utm_term=%E4%B8%AD%E6%96%AD%E9%A1%B6%E5%8D%8A%E9%83%A8%E5%92%8C%E5%BA%95%E5%8D%8A%E9%83%A8%E7%9A%84%E7%90%86%E8%A7%A3">Linux内核中断顶半部和底半部的理解-CSDN博客</a></li></ul><h3 id="4-4-linux中断的响应执行流程？中断的申请及何时执行-何时执行中断处理函数-？"><a href="#4-4-linux中断的响应执行流程？中断的申请及何时执行-何时执行中断处理函数-？" class="headerlink" title="4.4 linux中断的响应执行流程？中断的申请及何时执行(何时执行中断处理函数)？"></a>4.4 linux中断的响应执行流程？中断的申请及何时执行(何时执行中断处理函数)？</h3><ul><li>中断的响应流程：<strong>cpu接受中断-&gt;保存中断上下文跳转到中断处理历程-&gt;执行中断上半部-&gt;执行中断下半部-&gt;恢复中断上下文</strong>。</li><li>中断的申请request_irq的正确位置：应该是在第一次打开、硬件被告知中断之前。</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2024/08/07/test/"/>
      <url>/2024/08/07/test/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2024/08/06/2024-8-6(%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0)/"/>
      <url>/2024/08/06/2024-8-6(%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="测试测试"><a href="#测试测试" class="headerlink" title="测试测试"></a>测试测试</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法自带格式(如何写博客)</title>
      <link href="/2024/08/06/Markdown%E8%AF%AD%E6%B3%95%E8%87%AA%E5%B8%A6%E6%A0%BC%E5%BC%8F(%E5%A6%82%E4%BD%95%E5%86%99%E5%8D%9A%E5%AE%A2)/"/>
      <url>/2024/08/06/Markdown%E8%AF%AD%E6%B3%95%E8%87%AA%E5%B8%A6%E6%A0%BC%E5%BC%8F(%E5%A6%82%E4%BD%95%E5%86%99%E5%8D%9A%E5%AE%A2)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="/./../images/bywind.png" alt="图"></p><p>用Typora软件更简单</p><p><a href="https://www.bilibili.com/video/BV1iHaTe9EZ3/?spm_id_from=333.337.search-card.all.click&vd_source=390e7ea253547d9c75882d502ff42a1b">Typora安装激活流程_哔哩哔哩_bilibili</a></p><p>Typora安装文件及下载地址~<br>链接:<a href="https://pan.baidu.com/s/17CunIoob5JbtQZ1N5ZIyfg?pwd=zspz">https://pan.baidu.com/s/17CunIoob5JbtQZ1N5ZIyfg?pwd=zspz</a> 提取码:zspz</p><p>一键3连 上传代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl&amp;&amp;hexo g&amp;&amp;hexo d</span><br></pre></td></tr></table></figure><h2 id="多级标题"><a href="#多级标题" class="headerlink" title="多级标题"></a>多级标题</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># H1</span></span><br><span class="line"><span class="section">## H2</span></span><br><span class="line"><span class="section">### H3</span></span><br><span class="line"><span class="section">#### H4</span></span><br><span class="line"><span class="section">##### H5</span></span><br><span class="line"><span class="section">###### H6</span></span><br></pre></td></tr></table></figure><h2 id="文字样式"><a href="#文字样式" class="headerlink" title="文字样式"></a>文字样式</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线演示<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">文字<span class="strong">**加粗**</span>演示</span><br><span class="line"></span><br><span class="line">文字<span class="emphasis">*斜体*</span>演示</span><br><span class="line"></span><br><span class="line">文本<span class="code">`高亮`</span>演示</span><br><span class="line"></span><br><span class="line">文本~~删除~~线演示</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span> = <span class="string">5</span>&gt;</span></span>5号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>黑体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">blue</span>&gt;</span></span>蓝色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">MistyRose</span>&gt;</span></span>这里的背景色是：MistyRosen，此处输入任意想输入的内容<span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt;  Java</span></span><br><span class="line"><span class="quote">&gt; 二级引用演示</span></span><br><span class="line"><span class="quote">&gt; MySQL</span></span><br><span class="line"><span class="quote">&gt; &gt;外键</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;事务</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;<span class="strong">**行级锁**</span>(引用内部一样可以用格式)</span></span><br><span class="line"><span class="quote">&gt; </span></span><br><span class="line"><span class="quote">&gt; ....</span></span><br></pre></td></tr></table></figure><h2 id="1-5-分割线"><a href="#1-5-分割线" class="headerlink" title="1.5 分割线"></a>1.5 分割线</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 本地图片</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/assets/pusheencode.webp&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;示例图片&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:50%;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="section"># 在线图片</span></span><br><span class="line">![<span class="string">code</span>](<span class="link">https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png</span>)</span><br></pre></td></tr></table></figure><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 项目标号 | 资金     | 备注 |</span><br><span class="line">| -------- | -------- | ---- |</span><br><span class="line">| 1        | 100，000 | 无   |</span><br><span class="line">| 2        | 200，000 | 无   |</span><br><span class="line">| 3        | 300,600  | 重要 |</span><br></pre></td></tr></table></figure><h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\Gamma(z)=\int<span class="emphasis">_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt.</span></span><br><span class="line"><span class="emphasis">$$</span></span><br></pre></td></tr></table></figure><p>​分栏 tab</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><ol><li>Unique name :<ul><li>选项卡块标签的唯一名称，不带逗号。</li><li>将在#id中用作每个标签及其索引号的前缀。</li><li>如果名称中包含空格，则对于生成#id，所有空格将由破折号代替。</li><li>仅当前帖子&#x2F;页面的URL必须是唯一的！</li></ul></li><li>[index]:<ul><li>活动选项卡的索引号。</li><li>如果未指定，将选择第一个标签（1）。</li><li>如果index为-1，则不会选择任何选项卡。</li><li>可选参数。</li></ul></li><li>[Tab caption]:<ul><li>当前选项卡的标题。</li><li>如果未指定标题，则带有制表符索引后缀的唯一名称将用作制表符的标题。</li><li>如果未指定标题，但指定了图标，则标题将为空。</li><li>可选参数。</li></ul></li><li>[@icon]:<ul><li>FontAwesome图标名称（全名，看起来像“ fas fa-font”）</li><li>可以指定带空格或不带空格；</li><li>例如’Tab caption @icon’ 和 ‘Tab caption@icon’.</li><li>可选参数。</li></ul></li></ol><p>示例1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>示例2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line">**tab名字为第一个Tab**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line">**只有图标 没有Tab名字**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span><br><span class="line">**名字+icon**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>示例1</p><p>.<div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">test1 1</button><button type="button" class="tab " data-href="test1-2">test1 2</button><button type="button" class="tab " data-href="test1-3">test1 3</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></p><p>示例2</p><div class="tabs" id="test4"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test4-1">第一个Tab</button><button type="button" class="tab " data-href="test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button><button type="button" class="tab " data-href="test4-3"><i class="fas fa-bomb"></i>炸弹</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="音频-audio"><a href="#音频-audio" class="headerlink" title="音频 audio"></a>音频 audio</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">参数配置</button><button type="button" class="tab " data-href="test1-2">示例代码</button><button type="button" class="tab " data-href="test1-3">演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"></div><div class="tab-item-content" id="test1-2"></div><div class="tab-item-content" id="test1-3"></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CRAIC-2024目标射击学习过程</title>
      <link href="/2024/08/06/test/1/"/>
      <url>/2024/08/06/test/1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">  acc_lim_x: 1.5                #x方向的加速度极限，单位为 meters/sec^2 (double, default: 2.5)</span><br><span class="line">  acc_lim_y: 2.5                #                                  (double, default: 2.5)</span><br><span class="line">  acc_lim_th: 2.4               #角加速度极限，单位为 radians/sec^2 (double, default: 3.2)</span><br><span class="line"></span><br><span class="line">#The velocity when robot is moving in a straight line</span><br><span class="line">  max_vel_trans: 0.35           #机器人最大平移速度的绝对值 (double, default: 0.55)</span><br><span class="line">  min_vel_trans: 0.01           #                       (double, default: 0.1)</span><br><span class="line">  max_vel_theta: 0.8            #最大角速度的绝对值，单位为 rad/s (double, default: 1.0)</span><br><span class="line">  min_vel_theta: 0.15           #                             (double, default: 0.4)</span><br><span class="line"></span><br><span class="line">#Robot Configuration Parameters</span><br><span class="line">  max_vel_x: 0.35               #机器人在x方向的速度极限，单位为 meters/sec^2 (double, default: 0.55)</span><br><span class="line">  min_vel_x: -0.05               #                                        (double, default: 0.0)</span><br><span class="line"></span><br><span class="line">  max_vel_y: 0.1                #                                          (double, default: 0.1)</span><br><span class="line">  min_vel_y: -0.1               #                                          (double, default: -0.1)</span><br><span class="line"></span><br><span class="line">#Goal Tolerance Parametes </span><br><span class="line">  yaw_goal_tolerance: 0.03      #(double, default: 0.05)</span><br><span class="line">  xy_goal_tolerance: 0.07       #(double, default: 0.10)</span><br><span class="line">  latch_xy_goal_tolerance: true #如果锁定目标公差且机器人到达目标xy位置，机器人将简单地旋转到位，即使它在目标公差的范围内结束。</span><br><span class="line">                                 #(bool, default: false)</span><br><span class="line">#Forward Simulation Parameters</span><br><span class="line">  sim_time: 1.7                 #给定轨迹上的点之间的间隔尺寸，单位为 meters (double, default: 1.7)</span><br><span class="line">  sim_granularity: 0.025        # (double, default: 0.025)</span><br><span class="line">  vx_samples: 3                 #样本数 (integer, default: 3)</span><br><span class="line">  vy_samples: 10                 #(integer, default: 10)</span><br><span class="line">  vth_samples: 20               #角速度的样本数 (integer, default: 20)</span><br><span class="line">  controller_frequency: 20.0    #调用该控制器的频率 (double, default: 20.0)</span><br><span class="line"></span><br><span class="line">#Trajectory Scoring Parameters</span><br><span class="line">  path_distance_bias: 32.0      #控制器靠近给定路径的权重 (double, default: 32.0)</span><br><span class="line">  goal_distance_bias: 24.0      # 控制器尝试达到其本地目标and控制着速度的权重。(double, default: 24.0)</span><br><span class="line">  occdist_scale: 0.01           #控制器尝试避免障碍物的权重 (double, default: 0.01)</span><br><span class="line">  forward_point_distance: 0.325 #从机器人中心点到另一个得分点的距离 (double, default: 0.325)</span><br><span class="line">  stop_time_buffer: 0.2         #机器人在碰撞前必须停止的时间 (double, default: 0.2)</span><br><span class="line">  scaling_speed: 0.25           #缩放机器人足迹的速度的绝对值，单位为m/s (double, default: 0.25)</span><br><span class="line">  max_scaling_factor: 0.2       #缩放机器人足迹的最大因子 (double, default: 0.2)</span><br><span class="line">  publish_cost_grid: false      # (bool, default: false)</span><br><span class="line"></span><br><span class="line">#Oscillation Prevention Parameters</span><br><span class="line">  oscillation_reset_dist: 0.05  #机器人必须运动多少米远后才能复位震荡标记 (double, default: 0.05)</span><br><span class="line"></span><br><span class="line">#Debugging</span><br><span class="line">  publish_traj_pc : true        #将规划的轨迹在RVIZ上进行可视化</span><br><span class="line">  publish_cost_grid_pc: true    #将代价值进行可视化显示 (bool, default: false)</span><br><span class="line">  #是否发布规划器在规划路径时的代价网格.如果设置为true,那么就会在~/cost_cloud话题上发布sensor_msgs/PointCloud2类型消息</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里给部分参数的功能解读：<br>max_vel_x表示机器人最大线速度，单位是m&#x2F;s。<br>min_vel_x表示机器人最小线速度。<br>max_vel_y和min_vel_y对于两轮差分驱动机器人是无效的。<br>max_vel_theta表示机器人最大转动速度，单位是rad&#x2F;s。<br>min_vel_theta表示机器人最小转动速度。<br>acc_lim_x表示在x方向上最大的线加速度，单位是m&#x2F;s^2。<br>acc_lim_theta表示最大角加速度，单位是rad&#x2F;s^2。<br>yaw_goal_tolerance表示接近目标方向（就弧度来说）允许的误差（rad），此值太小会造成机器人在目标附近震荡。<br>xy_goal_tolerance表示接近目标允许的误差（m），此值设置太小，机器人会没完没了在目标位置周围做小调整，而且此值不能小于地图的分辨率。<br>sim_time表示规划器能看到未来多少秒。<br>dwa表示当模拟轨迹走向未来，是否使用动态窗口法。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>STUDY210(朱有鹏)</title>
      <link href="/2024/08/06/test/STUDY210(%E6%9C%B1%E6%9C%89%E9%B9%8F)/"/>
      <url>/2024/08/06/test/STUDY210(%E6%9C%B1%E6%9C%89%E9%B9%8F)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="隐藏文件与非隐藏文件"><a href="#隐藏文件与非隐藏文件" class="headerlink" title="隐藏文件与非隐藏文件"></a>隐藏文件与非隐藏文件</h1><p>Windows中：文件隐藏与不隐藏通过设置文件属性实现的，可以点击文件，右键属性，选择勾选隐藏选项来设置文件为隐藏文件。。在Windows中查看隐藏文件方法：菜单栏 工具-&gt;文件夹选项-&gt;查看-&gt;显示所有文件<br>和文件夹。<br>Linux中：linux中隐藏文件特点是文件名以.开头，跟文件属性无关。在linux中查看隐藏文件用ls -a命令（普通显示ls）</p><h1 id="相对路径与绝对路径"><a href="#相对路径与绝对路径" class="headerlink" title="相对路径与绝对路径"></a>相对路径与绝对路径</h1><p>什么是路径：路径是用来标识一个文件在操作系统的文件系统中存储位置的。pathname<br>举例：<br>D:\winshare\enum.c 全路径 pathname<br>D:\winshare路径 path<br>enum.c文件名name</p><p>绝对路径：路径是从绝对位置开始的。譬如Windows中从某一个盘符开始（C:\），linux中从根目录&#x2F;开始<br>相对路径：指明路径的时候，是从当前所在的位置开始的。</p><p>举例：<br>D:\我的文档\123\123.txt<br>D:\我的文档\abc\abc.txt<br>当前在123.txt，但是要去abc.txt<br>方式1：采用绝对路径。D:\我的文档\abc\abc.txt<br>方式2：采用相对路径。..&#x2F;abc&#x2F;abc.txt (..表示上一层)<br>从当前路径开始，往上走一层，再往下走一层（abc）就到了</p><p>测试：<br>&#x2F;abc&#x2F;123&#x2F;def.txt是linux绝对路径<br>abc&#x2F;123&#x2F;def.txt不是linux绝对路径<br>F:\abc\123\def.txt是windows绝对路径<br>abc\123\def.txt不是windows绝对路径</p><h1 id="linux内核、发行版"><a href="#linux内核、发行版" class="headerlink" title="linux内核、发行版"></a>linux内核、发行版</h1><p>linux本身指的是一个操作系统内核，只有内核是无法直接使用的。我们需要的，可以使用的操作系统是一个包含了内核和一批有用的应用程序的一个集合体，这个就叫linux发行版。<br>ubuntu、redhat就是linux的不同的发行版。</p><h1 id="GUI（图形用户界面）和cmdline（命令行）"><a href="#GUI（图形用户界面）和cmdline（命令行）" class="headerlink" title="GUI（图形用户界面）和cmdline（命令行）"></a>GUI（图形用户界面）和cmdline（命令行）</h1><p>GUI：grahics user interface，图形用户界面。<br>cmdline：command line，命令行。<br>人机交互：人和机器（计算机）进行交互，常用的有命令行和GUI。<br>Windows下既有GUI，又有命令行。linux中也是既有GUI，又有命令行。<br>但是，在linux中我们常用命令行(生产用)，在Windows中常用GUI（娱乐用）</p><h1 id="linux常用命令："><a href="#linux常用命令：" class="headerlink" title="linux常用命令："></a>linux常用命令：</h1><p>(1) ls（list，列表）<br>作用：使用列表把当前文件夹下所有文件显示出来<br>    ls -a显示所有文件，包括隐藏文件<br>    ls -l以详细信息显示<br>    ls -a -l<br>    ls -l -a<br>    ls -la<br>    ls -al四种方式都是可以的</p><p>man 作用：查询帮助信息</p><p>man 1 查询linux命令 </p><p>man2 查询api   </p><p>man3查询C库函数</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CRAIC-2024目标射击实践过程</title>
      <link href="/2024/08/06/test/CRAIC-2024%E7%9B%AE%E6%A0%87%E5%B0%84%E5%87%BB%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B/"/>
      <url>/2024/08/06/test/CRAIC-2024%E7%9B%AE%E6%A0%87%E5%B0%84%E5%87%BB%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="CRAIC目标射击实践"><a href="#CRAIC目标射击实践" class="headerlink" title="CRAIC目标射击实践"></a>CRAIC目标射击实践</h1><h1 id="比赛介绍"><a href="#比赛介绍" class="headerlink" title="比赛介绍"></a>比赛介绍</h1><p>中国机器人及人工智能大赛是一项历史悠久、影响广泛的全国性学科竞赛。目前大赛已为我国培养了大量“能动手”、“敢创新”、“善协作”的复合型人才。大赛已列入中国高等教育学会发布的全国普通高等学校学科竞赛排行榜、全国普通高校大学生竞赛分析报告。为积极响应中国机器人及人工智能大赛组委会号召以及进一步发挥大赛培养学生主动学习、主动创新、主动创造的能力，激发广大学生探索、应用、创新、创造新技术的热情，有效推进相关专业人才培养。</p><h1 id="主要使用代码"><a href="#主要使用代码" class="headerlink" title="主要使用代码"></a>主要使用代码</h1><p>主目录运行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">建图：  ./1-gmapping.sh </span><br><span class="line">保存：  roslaunch robot_slam save_map.launch</span><br><span class="line">射击： roslaunch abot_bringup shoot.launch   发射驱动程序</span><br><span class="line">rostopic pub /shoot  std_msgs/String &quot;data: &#x27;&#x27; &quot;   发布射击的空话题，等待发射</span><br><span class="line">识别：</span><br><span class="line">roslaunch usb_cam usb_cam_test.launch   打开相机</span><br><span class="line">rosrun rqt_image_view  rqt_image_view   可视化相机</span><br><span class="line">语音：</span><br><span class="line">连接蓝牙耳机WI-C200（在蓝牙设置中连接）</span><br><span class="line">roscore</span><br><span class="line">rosrun  robot_voice   tts_subscribe</span><br><span class="line">rostopic  pub /voiceWords std_msgs/String &quot;data: &#x27;1234&#x27; &quot;</span><br><span class="line"></span><br><span class="line">启动导航与识别：</span><br><span class="line">3-mission.sh 在这里</span><br><span class="line">roslaunch track_tag usb_cam_with_calibration.launch  打开相机节点</span><br><span class="line">roslaunch track_tag ar_track_camera.launch   启动二维码识别节点</span><br><span class="line">rosrun robot_voice tts_subscribe; exec bash  语音播报节点</span><br><span class="line">robot_slam/launch/multi_goal.launch  修改导航的目标点的坐标值（文件路径）</span><br><span class="line">robot_slam/scripts/ navigation_multi_goals.py  修改对应id分别走到哪个点（文件路径）</span><br><span class="line"></span><br><span class="line">射击相关：</span><br><span class="line">user_demo/param/mission.yaml    修改射击目标点的相关参数（文件路径）</span><br><span class="line">roslaunch usb_cam usb_cam_test.launch   打开相机</span><br><span class="line">roslaunch  find_object_2d  find_object_2d6.launch  启动识别程序</span><br><span class="line">rosrun  robot_slam   III.py   识别结果判断</span><br><span class="line">rostopic echo /object_position</span><br><span class="line">跟踪标签：在6-mission.sh里有 ，</span><br><span class="line">roslaunch  track_tag usb_cam_with_calibration.launch</span><br><span class="line">roslaunch  track_tag ar_track_camera.launch</span><br><span class="line">rostopic echo /ar_pose_marker</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">启动代码前一定要插上炮台的USB串口线，不然运行就会报错没有串口 /dev/shoot，记得打开炮台开关</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">查看坐标点</span><br><span class="line">运行navigation.sh脚本前注释掉最后一行 ，在打开的地图里点击目标点前 运 rostopic echo /move_base_simple/goal</span><br><span class="line">在导航地图中使用RViz中的navigation goal标定目标后，到终端的输出查看pose 字段，里面有x,y目标点</span><br><span class="line">直接拿迟来量坐标比较快，单位是米，搞懂ros坐标系</span><br><span class="line"></span><br><span class="line">编译及运行--------------------------------------------------------------------</span><br><span class="line">catkin_make    </span><br><span class="line">catkin_make -DCATKIN_WHITELIST_PACKAGES=&quot;robot_slam&quot;</span><br><span class="line"></span><br><span class="line">source devel/setup.bash</span><br><span class="line">source /opt/ros/melodic/setup.bash</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="逻辑文件"><a href="#逻辑文件" class="headerlink" title="逻辑文件"></a>逻辑文件</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">#!/usr/bin/env python</span><br><span class="line">#coding: utf-8</span><br><span class="line"> </span><br><span class="line">import rospy</span><br><span class="line">from geometry_msgs.msg import Point, Twist</span><br><span class="line">import threading</span><br><span class="line">import actionlib</span><br><span class="line">import serial</span><br><span class="line">import time</span><br><span class="line">from actionlib_msgs.msg import GoalStatus</span><br><span class="line">from move_base_msgs.msg import MoveBaseAction, MoveBaseGoal</span><br><span class="line">from geometry_msgs.msg import PoseWithCovarianceStamped</span><br><span class="line">from tf_conversions import transformations</span><br><span class="line">from ar_track_alvar_msgs.msg import AlvarMarkers</span><br><span class="line">from math import pi</span><br><span class="line">import subprocess</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class Navigation:</span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.set_pose_pub = rospy.Publisher(&#x27;/initialpose&#x27;, PoseWithCovarianceStamped, queue_size=5)</span><br><span class="line">        self.move_base = actionlib.SimpleActionClient(&quot;move_base&quot;, MoveBaseAction)</span><br><span class="line">        self.move_base.wait_for_server(rospy.Duration(60))</span><br><span class="line"> </span><br><span class="line">    def set_pose(self, p):</span><br><span class="line">        if self.move_base is None:</span><br><span class="line">            return False</span><br><span class="line">        x, y, th = p</span><br><span class="line">        pose = PoseWithCovarianceStamped()</span><br><span class="line">        pose.header.stamp = rospy.Time.now()</span><br><span class="line">        pose.header.frame_id = &#x27;map&#x27;</span><br><span class="line">        pose.pose.pose.position.x = x</span><br><span class="line">        pose.pose.pose.position.y = y</span><br><span class="line">        q = transformations.quaternion_from_euler(0.0, 0.0, th/180.0*pi)</span><br><span class="line">        pose.pose.pose.orientation.x = q[0]</span><br><span class="line">        pose.pose.pose.orientation.y = q[1]</span><br><span class="line">        pose.pose.pose.orientation.z = q[2]</span><br><span class="line">        pose.pose.pose.orientation.w = q[3]</span><br><span class="line">        self.set_pose_pub.publish(pose)</span><br><span class="line">        return True </span><br><span class="line"> </span><br><span class="line">    def _feedback_cb(self, feedback):</span><br><span class="line">        msg = feedback</span><br><span class="line">        #rospy.loginfo(&quot;[Navi] navigation feedback\r\n%s&quot;%feedback)</span><br><span class="line"> </span><br><span class="line">    def goto(self, p):</span><br><span class="line">        rospy.loginfo(&quot;[Navigation] goto %s&quot;%p)</span><br><span class="line">        goal = MoveBaseGoal()</span><br><span class="line">        goal.target_pose.header.frame_id = &#x27;map&#x27;</span><br><span class="line">        goal.target_pose.header.stamp = rospy.Time.now()</span><br><span class="line">        goal.target_pose.pose.position.x = p[0]</span><br><span class="line">        goal.target_pose.pose.position.y = p[1]</span><br><span class="line">        q = transformations.quaternion_from_euler(0.0, 0.0, p[2]/180.0*pi)</span><br><span class="line">        goal.target_pose.pose.orientation.x = q[0]</span><br><span class="line">        goal.target_pose.pose.orientation.y = q[1]</span><br><span class="line">        goal.target_pose.pose.orientation.z = q[2]</span><br><span class="line">        goal.target_pose.pose.orientation.w = q[3]</span><br><span class="line">        self.move_base.send_goal(goal, self._done_cb, self._active_cb, self._feedback_cb)</span><br><span class="line">        result = self.move_base.wait_for_result(rospy.Duration(60))</span><br><span class="line">        if not result:</span><br><span class="line">            self.move_base.cancel_goal()</span><br><span class="line">            rospy.loginfo(&quot;Timed out achieving goal&quot;)</span><br><span class="line">        else:</span><br><span class="line">            state = self.move_base.get_state()</span><br><span class="line">            if state == GoalStatus.SUCCEEDED:</span><br><span class="line">                rospy.loginfo(&quot;reach goal %s succeeded!&quot;%p)</span><br><span class="line">        return True</span><br><span class="line"> </span><br><span class="line">    def _done_cb(self, status, result):</span><br><span class="line">        rospy.loginfo(&quot;navigation done! status:%d result:%s&quot;%(status, result))</span><br><span class="line"> </span><br><span class="line">    def _active_cb(self):</span><br><span class="line">        rospy.loginfo(&quot;[Navi] navigation has be actived&quot;)</span><br><span class="line"> </span><br><span class="line">    def cancel(self):</span><br><span class="line">        self.move_base.cancel_all_goals()</span><br><span class="line">        return True</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class ARTracker:</span><br><span class="line">def __init__(self):</span><br><span class="line">self.ar_sub = rospy.Subscriber(&#x27;/ar_pose_marker&#x27;, AlvarMarkers, self.ar_cb)</span><br><span class="line">def ar_cb(self,data):</span><br><span class="line">global target_id</span><br><span class="line">global ar_x</span><br><span class="line">global ar_y</span><br><span class="line">global ar_z</span><br><span class="line">global ar_id</span><br><span class="line">for marker in data.markers:</span><br><span class="line">if  marker.id == target_id :</span><br><span class="line">ar_x = marker.pose.pose.position.x</span><br><span class="line">ar_y = marker.pose.pose.position.y</span><br><span class="line">ar_z = marker.pose.pose.position.z</span><br><span class="line">ar_id = marker.id</span><br><span class="line">#print(&#x27;AR Marker Position (x,y,z):&#x27;, ar_x, ar_y,ar_z)</span><br><span class="line">break</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class Object_position:</span><br><span class="line">def __init__(self):</span><br><span class="line">    self.ar_sub = rospy.Subscriber(&#x27;/object_position&#x27;, Point, self.find_cb)</span><br><span class="line"> </span><br><span class="line">def find_cb(self,data):</span><br><span class="line">    global find_id </span><br><span class="line">    global find_x</span><br><span class="line">    global find_y     </span><br><span class="line">    point_msg = data</span><br><span class="line">    if(point_msg.z&gt;=1 and point_msg.z&lt;=5):</span><br><span class="line">        find_id = 1</span><br><span class="line">        find_x=point_msg.x</span><br><span class="line">        find_y=point_msg.y         </span><br><span class="line">    else:</span><br><span class="line">        find_id = 0</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def process():</span><br><span class="line">    rospy.spin()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">find_id = 0 </span><br><span class="line">find_x=0.0</span><br><span class="line">find_y=0.0</span><br><span class="line">target_id = 0 </span><br><span class="line">ar_id = 0 </span><br><span class="line">ar_x =0.0</span><br><span class="line">ar_y =0.0</span><br><span class="line">ar_z =0.0</span><br><span class="line"> </span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line"> </span><br><span class="line">    rospy.init_node(&#x27;navigation_demo&#x27;,anonymous=True)</span><br><span class="line">    ser = serial.Serial(port=&quot;/dev/shoot&quot;, baudrate=9600, parity=&quot;N&quot;, bytesize=8, stopbits=1)</span><br><span class="line">    pub = rospy.Publisher(&quot;/cmd_vel&quot;, Twist, queue_size=1000)</span><br><span class="line"> </span><br><span class="line">    goals = [  [1.1 , -0.37,0.0],</span><br><span class="line">            [1.1 , -1.45,.0],</span><br><span class="line">   [1.0 , -2.72,.0],</span><br><span class="line">            [0.07 , -2.72,.0]  ]</span><br><span class="line"> </span><br><span class="line">    object_position = Object_position()</span><br><span class="line">    ar_acker = ARTracker()</span><br><span class="line"> </span><br><span class="line">    executor_thread = threading.Thread(target=process).start()</span><br><span class="line"> </span><br><span class="line">    navi = Navigation()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    time.sleep(15)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># ------first--------------------------------------------------------</span><br><span class="line">    navi.goto(goals[0])</span><br><span class="line">    start=time.time()</span><br><span class="line">    is_shoot=0</span><br><span class="line">    while True:</span><br><span class="line">        if find_id == 1:</span><br><span class="line">            flog0 = find_x - 320</span><br><span class="line">            flog1 = abs(flog0)</span><br><span class="line">        print(flog0)</span><br><span class="line">            if abs(flog1) &gt;10:</span><br><span class="line">                msg = Twist()      </span><br><span class="line">                msg.angular.z = -0.01 * flog0 </span><br><span class="line">                pub.publish(msg)</span><br><span class="line">    print(msg.angular.z)</span><br><span class="line">            elif abs(flog1) &lt;= 10: </span><br><span class="line">                print(&#x27;1 is shoot&#x27;)       </span><br><span class="line">                ser.write(b&#x27;\x55\x01\x12\x00\x00\x00\x01\x69&#x27;) </span><br><span class="line">                time.sleep(0.2)       </span><br><span class="line">                ser.write(b&#x27;\x55\x01\x11\x00\x00\x00\x01\x68&#x27;) </span><br><span class="line">                time.sleep(2)</span><br><span class="line">        is_shoot=1</span><br><span class="line">                break</span><br><span class="line">        end=time.time()</span><br><span class="line">        if end-start&gt;12:</span><br><span class="line">            break</span><br><span class="line"> </span><br><span class="line">    if is_shoot==0:</span><br><span class="line">        ser.write(b&#x27;\x55\x01\x12\x00\x00\x00\x01\x69&#x27;) </span><br><span class="line">        time.sleep(0.2)       </span><br><span class="line">        ser.write(b&#x27;\x55\x01\x11\x00\x00\x00\x01\x68&#x27;) </span><br><span class="line">        time.sleep(2)</span><br><span class="line"> </span><br><span class="line">    #subprocess.run( [&#x27;rosnode&#x27;,&#x27;kill&#x27;,&#x27;find_object_2d&#x27;] )</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># ------sencond-----------------------------------------------------</span><br><span class="line">    navi.goto(goals[1])</span><br><span class="line">    target_id=1     </span><br><span class="line">    Yaw_th = 0.003</span><br><span class="line">    start=time.time()</span><br><span class="line">    is_shoot=0</span><br><span class="line">    while True:</span><br><span class="line">        if ar_id == target_id:</span><br><span class="line">            ar_x_abs = abs(ar_x)</span><br><span class="line">            print(&#x27;x:&#x27;,ar_x)</span><br><span class="line">            print(&#x27;z:&#x27;,ar_z)       </span><br><span class="line">            if ar_x_abs &gt;= Yaw_th: </span><br><span class="line">                msg = Twist()  </span><br><span class="line">                msg.angular.z = -1.5 * ar_x </span><br><span class="line">                pub.publish(msg)</span><br><span class="line">            elif ar_x_abs &lt; Yaw_th and (ar_z &gt;= 1.57 and ar_z &lt;=1.64):</span><br><span class="line">                print(&#x27;2 is shoot&#x27;) </span><br><span class="line">                ser.write(b&#x27;\x55\x01\x12\x00\x00\x00\x01\x69&#x27;) </span><br><span class="line">                time.sleep(0.1)       </span><br><span class="line">                ser.write(b&#x27;\x55\x01\x11\x00\x00\x00\x01\x68&#x27;)</span><br><span class="line">        is_shoot=1</span><br><span class="line">                break</span><br><span class="line">        end=time.time()</span><br><span class="line">        if end-start&gt;20:</span><br><span class="line">            break</span><br><span class="line"> </span><br><span class="line">    if is_shoot==0:</span><br><span class="line">        ser.write(b&#x27;\x55\x01\x12\x00\x00\x00\x01\x69&#x27;) </span><br><span class="line">        time.sleep(0.2)       </span><br><span class="line">        ser.write(b&#x27;\x55\x01\x11\x00\x00\x00\x01\x68&#x27;) </span><br><span class="line">        time.sleep(2)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># # --------------------third----------------------------------</span><br><span class="line">    navi.goto(goals[2])</span><br><span class="line">    target_id=2     # ------------------------------------------------------</span><br><span class="line">    Yaw_th = 0.002</span><br><span class="line">    start=time.time()</span><br><span class="line">    is_shoot=0</span><br><span class="line">    while True:</span><br><span class="line">        if ar_id == target_id:</span><br><span class="line">            ar_x_abs = abs(ar_x)</span><br><span class="line">        print(ar_x)       </span><br><span class="line">            if ar_x_abs &gt;= Yaw_th: </span><br><span class="line">                msg = Twist()  </span><br><span class="line">                msg.angular.z = -1.5 * ar_x  </span><br><span class="line">                pub.publish(msg)</span><br><span class="line">            elif ar_x_abs &lt; Yaw_th:</span><br><span class="line">                print(&#x27;3 is shoot&#x27;) </span><br><span class="line">                ser.write(b&#x27;\x55\x01\x12\x00\x00\x00\x01\x69&#x27;) </span><br><span class="line">                time.sleep(0.1)       </span><br><span class="line">                ser.write(b&#x27;\x55\x01\x11\x00\x00\x00\x01\x68&#x27;)</span><br><span class="line">        is_shoot=1 </span><br><span class="line">                break</span><br><span class="line"> </span><br><span class="line">        end=time.time()</span><br><span class="line">        if end-start&gt;12:</span><br><span class="line">            break</span><br><span class="line">    if is_shoot==0:</span><br><span class="line">        ser.write(b&#x27;\x55\x01\x12\x00\x00\x00\x01\x69&#x27;) </span><br><span class="line">        time.sleep(0.2)       </span><br><span class="line">        ser.write(b&#x27;\x55\x01\x11\x00\x00\x00\x01\x68&#x27;) </span><br><span class="line">        time.sleep(2)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># # -------------------------------------------------------------------------</span><br><span class="line"> </span><br><span class="line">    navi.goto(goals[3]) </span><br><span class="line">    #slowly</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    #rclpy.shutdown()</span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h1 id="二维码识别"><a href="#二维码识别" class="headerlink" title="二维码识别"></a>二维码识别</h1><p>二维码识别部分，脚本放在abot_ws&#x2F;src&#x2F;robot_slam&#x2F;scripts&#x2F;ar_demo_s.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">from</span> ar_track_alvar_msgs.msg <span class="keyword">import</span> AlvarMarkers</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ARTracker</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 初始化ROS节点，命名为&#x27;ar_tracker_node&#x27;，并设置为匿名节点</span></span><br><span class="line">        rospy.init_node(<span class="string">&#x27;ar_tracker_node&#x27;</span>, anonymous=<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># 创建一个订阅者，订阅AR标记的消息，消息类型为AlvarMarkers，回调函数为ar_cb</span></span><br><span class="line">        <span class="variable language_">self</span>.sub = rospy.Subscriber(<span class="string">&#x27;/ar_pose_marker&#x27;</span>, AlvarMarkers, <span class="variable language_">self</span>.ar_cb)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 初始化AR标记的x和y坐标</span></span><br><span class="line">        <span class="variable language_">self</span>.ar_x_0 = <span class="number">0.0</span></span><br><span class="line">        <span class="variable language_">self</span>.ar_y_0 = <span class="number">0.0</span></span><br><span class="line">        <span class="comment"># 初始化AR标记的ID</span></span><br><span class="line">        <span class="variable language_">self</span>.<span class="built_in">id</span> = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># AR标记消息的回调函数</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">ar_cb</span>(<span class="params">self, data</span>):</span><br><span class="line">        <span class="comment"># 遍历接收到的所有AR标记</span></span><br><span class="line">        <span class="keyword">for</span> marker <span class="keyword">in</span> data.markers:</span><br><span class="line">            <span class="comment"># 如果AR标记的ID为0</span></span><br><span class="line">            <span class="keyword">if</span> marker.<span class="built_in">id</span> == <span class="number">0</span>:</span><br><span class="line">                <span class="comment"># 更新AR标记的x和y坐标</span></span><br><span class="line">                <span class="variable language_">self</span>.ar_x_0 = marker.pose.pose.position.x</span><br><span class="line">                <span class="variable language_">self</span>.ar_y_0 = marker.pose.pose.position.y</span><br><span class="line">                <span class="comment"># 更新AR标记的ID</span></span><br><span class="line">                <span class="variable language_">self</span>.<span class="built_in">id</span> = marker.<span class="built_in">id</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># 打印检测到的AR标记的ID和位置信息</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;Detected AR Marker ID:&#x27;</span>, <span class="variable language_">self</span>.<span class="built_in">id</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;AR Marker Position (x,y):&#x27;</span>, <span class="variable language_">self</span>.ar_x_0, <span class="variable language_">self</span>.ar_y_0)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 创建ARTracker对象</span></span><br><span class="line">        ar_tracker = ARTracker()</span><br><span class="line">        <span class="comment"># 进入ROS事件循环</span></span><br><span class="line">        rospy.spin()</span><br><span class="line">    <span class="keyword">except</span> rospy.ROSInterruptException:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h1 id="二维码射击"><a href="#二维码射击" class="headerlink" title="二维码射击"></a>二维码射击</h1><p>二维码射击部分，脚本放在abot_ws&#x2F;src&#x2F;robot_slam&#x2F;scripts&#x2F;ar_shoot_demo.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 上面这行是为了告诉操作系统，这是一个Python脚本，可以直接运行</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">from</span> ar_track_alvar_msgs.msg <span class="keyword">import</span> AlvarMarkers</span><br><span class="line"><span class="keyword">from</span> geometry_msgs.msg <span class="keyword">import</span> Twist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义Yaw阈值</span></span><br><span class="line">Yaw_th = <span class="number">0.0045</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ARTracker</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 初始化ROS节点，命名为&#x27;ar_tracker_node&#x27;，并设置为匿名节点</span></span><br><span class="line">        rospy.init_node(<span class="string">&#x27;ar_tracker_node&#x27;</span>, anonymous=<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># 创建一个订阅者，订阅AR标记的消息，消息类型为AlvarMarkers，回调函数为ar_cb</span></span><br><span class="line">        <span class="variable language_">self</span>.sub = rospy.Subscriber(<span class="string">&#x27;/ar_pose_marker&#x27;</span>, AlvarMarkers, <span class="variable language_">self</span>.ar_cb)</span><br><span class="line">        <span class="comment"># 创建一个发布者，用于发布Twist类型的消息到/cmd_vel话题</span></span><br><span class="line">        <span class="variable language_">self</span>.pub = rospy.Publisher(<span class="string">&quot;/cmd_vel&quot;</span>, Twist, queue_size=<span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># AR标记消息的回调函数</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">ar_cb</span>(<span class="params">self, data</span>):</span><br><span class="line">        <span class="keyword">global</span> ar_x, ar_x_abs, Yaw_th</span><br><span class="line">        <span class="comment"># 获取所有AR标记</span></span><br><span class="line">        ar_markers = data</span><br><span class="line">        <span class="comment"># 遍历接收到的所有AR标记</span></span><br><span class="line">        <span class="keyword">for</span> marker <span class="keyword">in</span> data.markers:</span><br><span class="line">            <span class="comment"># 如果AR标记的ID为0</span></span><br><span class="line">            <span class="keyword">if</span> marker.<span class="built_in">id</span> == <span class="number">0</span>:</span><br><span class="line">                <span class="comment"># 获取AR标记的x坐标</span></span><br><span class="line">                ar_x = marker.pose.pose.position.x</span><br><span class="line">                <span class="comment"># 计算AR标记x坐标的绝对值</span></span><br><span class="line">                ar_x_abs = <span class="built_in">abs</span>(ar_x)</span><br><span class="line">                <span class="comment"># 如果AR标记的x坐标绝对值大于等于Yaw阈值</span></span><br><span class="line">                <span class="keyword">if</span> ar_x_abs &gt;= Yaw_th:</span><br><span class="line">                    <span class="comment"># 创建一个Twist消息</span></span><br><span class="line">                    msg = Twist()</span><br><span class="line">                    <span class="comment"># 设置消息的角速度为AR标记x坐标的相反值（*-1）</span></span><br><span class="line">                    msg.angular.z = -<span class="number">1.5</span> * ar_x</span><br><span class="line">                    <span class="comment"># 发布Twist消息</span></span><br><span class="line">                    <span class="variable language_">self</span>.pub.publish(msg)</span><br><span class="line">                <span class="comment"># 如果AR标记的x坐标绝对值小于Yaw阈值</span></span><br><span class="line">                <span class="keyword">elif</span> ar_x_abs &lt; Yaw_th:</span><br><span class="line">                    <span class="built_in">print</span> <span class="string">&quot;ok&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 创建ARTracker对象</span></span><br><span class="line">        ar_tracker = ARTracker()</span><br><span class="line">        <span class="comment"># 进入ROS事件循环</span></span><br><span class="line">        rospy.spin()</span><br><span class="line">    <span class="keyword">except</span> rospy.ROSInterruptException:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">、</span><br></pre></td></tr></table></figure><h1 id="图像识别"><a href="#图像识别" class="headerlink" title="图像识别"></a>图像识别</h1><p>图像识别部分，脚本放在abot_ws&#x2F;src&#x2F;robot_slam&#x2F;scripts&#x2F;find_demo_s.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 上面这行是为了告诉操作系统，这是一个Python脚本，可以直接运行</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">from</span> geometry_msgs.msg <span class="keyword">import</span> Point</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">object_position</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 初始化ROS节点，命名为&#x27;object_position_node&#x27;，并设置为匿名节点</span></span><br><span class="line">        rospy.init_node(<span class="string">&#x27;object_position_node&#x27;</span>, anonymous=<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># 创建一个订阅者，订阅/object_position话题，消息类型为Point，回调函数为find_cb</span></span><br><span class="line">        <span class="variable language_">self</span>.find_sub = rospy.Subscriber(<span class="string">&#x27;/object_position&#x27;</span>, Point, <span class="variable language_">self</span>.find_cb)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># /object_position话题的回调函数</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">find_cb</span>(<span class="params">self, data</span>):</span><br><span class="line">        <span class="comment"># 获取接收到的Point消息</span></span><br><span class="line">        point_msg = data</span><br><span class="line">        <span class="comment"># 打印接收到的点的x坐标</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;x:&#x27;</span>, point_msg.x)</span><br><span class="line">        <span class="comment"># 打印接收到的点的y坐标</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;y:&#x27;</span>, point_msg.y)</span><br><span class="line">        <span class="comment"># 打印接收到的点的z坐标</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;z:&#x27;</span>, point_msg.z)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 创建object_position对象</span></span><br><span class="line">        object_position = object_position()</span><br><span class="line">        <span class="comment"># 进入ROS事件循环</span></span><br><span class="line">        rospy.spin()</span><br><span class="line">    <span class="keyword">except</span> rospy.ROSInterruptException:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="图像识别射击"><a href="#图像识别射击" class="headerlink" title="图像识别射击"></a>图像识别射击</h1><p>图像识别射击部分，脚本放在abot_ws&#x2F;src&#x2F;robot_slam&#x2F;scripts&#x2F;find_shoot_demo.py</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># 上面这行是为了告诉操作系统，这是一个Python脚本，可以直接运行</span><br><span class="line"></span><br><span class="line">import rospy</span><br><span class="line">from geometry_msgs.msg import Point, Twist</span><br><span class="line">import serial</span><br><span class="line">import time</span><br><span class="line">from std_msgs.msg import String</span><br><span class="line"></span><br><span class="line"># 设置串口和波特率</span><br><span class="line">serialPort = &quot;/dev/shoot&quot;</span><br><span class="line">baudRate = 9600</span><br><span class="line"></span><br><span class="line"># 打开串口</span><br><span class="line">ser = serial.Serial(port=serialPort, baudrate=baudRate, parity=&quot;N&quot;, bytesize=8, stopbits=1)</span><br><span class="line"></span><br><span class="line">class object_position:</span><br><span class="line">    def __init__(self):</span><br><span class="line">        # 初始化ROS节点，命名为&#x27;object_position_node&#x27;，并设置为匿名节点</span><br><span class="line">        rospy.init_node(&#x27;object_position_node&#x27;, anonymous=True)</span><br><span class="line">        # 创建一个订阅者，订阅/object_position话题，消息类型为Point，回调函数为find_cb</span><br><span class="line">        self.find_sub = rospy.Subscriber(&#x27;/object_position&#x27;, Point, self.find_cb)</span><br><span class="line">        # 创建一个发布者，用于发布Twist类型的消息到/cmd_vel话题</span><br><span class="line">        self.pub = rospy.Publisher(&quot;/cmd_vel&quot;, Twist, queue_size=1000)</span><br><span class="line"></span><br><span class="line">    # /object_position话题的回调函数</span><br><span class="line">    def find_cb(self, data):</span><br><span class="line">        global flog0, flog1</span><br><span class="line">        # 获取接收到的Point消息</span><br><span class="line">        point_msg = data</span><br><span class="line">        # 计算目标点与图像中心的偏差</span><br><span class="line">        flog0 = point_msg.x - 320</span><br><span class="line">        # 计算偏差的绝对值</span><br><span class="line">        flog1 = abs(flog0)</span><br><span class="line">        # 如果偏差的绝对值大于0.5</span><br><span class="line">        if abs(flog1) &gt; 0.5:</span><br><span class="line">            # 创建一个Twist消息</span><br><span class="line">            msg = Twist()</span><br><span class="line">            # 设置消息的角速度为偏差乘以0.01</span><br><span class="line">            msg.angular.z = -0.01 * flog0</span><br><span class="line">            # 发布Twist消息</span><br><span class="line">            self.pub.publish(msg)</span><br><span class="line">        # 如果偏差的绝对值小于等于0.5</span><br><span class="line">        elif abs(flog1) &lt;= 0.5:</span><br><span class="line">            # 发送射击指令</span><br><span class="line">            ser.write(b&#x27;\x55\x01\x12\x00\x00\x00\x01\x69&#x27;)</span><br><span class="line">            print (&#x27;打印射击&#x27;)</span><br><span class="line">            # 等待0.1秒</span><br><span class="line">            time.sleep(0.08)</span><br><span class="line">            # 发送停止射击指令</span><br><span class="line">            ser.write(b&#x27;\x55\x01\x11\x00\x00\x00\x01\x68&#x27;)</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    try:</span><br><span class="line">        # 创建object_position对象</span><br><span class="line">        object_position = object_position()</span><br><span class="line">        # 进入ROS事件循环</span><br><span class="line">        rospy.spin()</span><br><span class="line">    except rospy.ROSInterruptException:</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="机器人移动方法1"><a href="#机器人移动方法1" class="headerlink" title="机器人移动方法1"></a>机器人移动方法1</h1><p>机器人循环移动，脚本放在abot_ws&#x2F;src&#x2F;robot_slam&#x2F;scripts&#x2F;move_demo.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding: utf-8</span></span><br><span class="line"><span class="comment"># 上面两行是为了告诉操作系统，这是一个Python脚本，并且使用UTF-8编码</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">from</span> geometry_msgs.msg <span class="keyword">import</span> Twist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义移动机器人的函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">move_robot</span>(<span class="params">linear_x, angular_z</span>):</span><br><span class="line">    <span class="comment"># 初始化ROS节点，命名为&#x27;move_robot_node&#x27;，并设置为匿名节点</span></span><br><span class="line">    rospy.init_node(<span class="string">&#x27;move_robot_node&#x27;</span>, anonymous=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># 创建一个发布者，用于发布Twist类型的消息到/cmd_vel话题</span></span><br><span class="line">    velocity_publisher = rospy.Publisher(<span class="string">&#x27;/cmd_vel&#x27;</span>, Twist, queue_size=<span class="number">10</span>)</span><br><span class="line">    <span class="comment"># 设置ROS发布频率为10Hz</span></span><br><span class="line">    rate = rospy.Rate(<span class="number">10</span>)  </span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建一个Twist消息，设置线速度和角速度</span></span><br><span class="line">    vel_msg = Twist()</span><br><span class="line">    vel_msg.linear.x = linear_x</span><br><span class="line">    vel_msg.angular.z = angular_z</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 循环发布消息，直到节点被关闭</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> rospy.is_shutdown():</span><br><span class="line">        velocity_publisher.publish(vel_msg)</span><br><span class="line">        rate.sleep()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 设置线速度和角速度</span></span><br><span class="line">        linear_x = <span class="number">0.2</span>   <span class="comment"># 线速度</span></span><br><span class="line">        angular_z = <span class="number">0.5</span>  <span class="comment"># 角速度</span></span><br><span class="line">        <span class="comment"># 调用move_robot函数，控制机器人移动</span></span><br><span class="line">        move_robot(linear_x, angular_z)</span><br><span class="line">    <span class="keyword">except</span> rospy.ROSInterruptException:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="机器人移动方法2"><a href="#机器人移动方法2" class="headerlink" title="机器人移动方法2"></a>机器人移动方法2</h1><p>机器人指定移动，脚本放在abot_ws&#x2F;src&#x2F;robot_slam&#x2F;scripts&#x2F;move_robot.py</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line">#coding: utf-8</span><br><span class="line"># 上面两行是为了告诉操作系统，这是一个Python脚本，并且使用UTF-8编码</span><br><span class="line"></span><br><span class="line">import rospy</span><br><span class="line">from geometry_msgs.msg import Twist</span><br><span class="line"></span><br><span class="line">class move_robot:</span><br><span class="line">    def __init__(self):</span><br><span class="line">        # 初始化ROS节点，命名为&#x27;move_robot_node&#x27;，并设置为匿名节点</span><br><span class="line">        rospy.init_node(&#x27;move_robot_node&#x27;, anonymous=True)</span><br><span class="line">        # 创建一个发布者，用于发布Twist类型的消息到/cmd_vel话题</span><br><span class="line">        self.pub = rospy.Publisher(&quot;/cmd_vel&quot;, Twist, queue_size=1000)</span><br><span class="line"></span><br><span class="line">    # 控制机器人移动的回调函数</span><br><span class="line">    def move_cb(self):</span><br><span class="line">        global time</span><br><span class="line">        # 初始化时间变量</span><br><span class="line">        time = 0</span><br><span class="line">        # 创建一个Twist消息</span><br><span class="line">        msg = Twist()</span><br><span class="line">        msg.linear.x = 1.0</span><br><span class="line">        msg.linear.y = 0.0</span><br><span class="line">        msg.linear.z = 0.0</span><br><span class="line">        msg.angular.x = 0.0</span><br><span class="line">        msg.angular.y = 0.0</span><br><span class="line">        msg.angular.z = 0.0</span><br><span class="line">        # 控制机器人移动，持续1秒</span><br><span class="line">        while time &lt; 10:</span><br><span class="line">            self.pub.publish(msg)</span><br><span class="line">            rospy.sleep(0.1)</span><br><span class="line">            time += 1</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    try:</span><br><span class="line">        # 创建move_robot对象</span><br><span class="line">        move = move_robot()</span><br><span class="line">        # 调用move_cb函数，控制机器人移动</span><br><span class="line">        move.move_cb()</span><br><span class="line">    except rospy.ROSInterruptException:</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">、</span><br></pre></td></tr></table></figure><h1 id="射击实现"><a href="#射击实现" class="headerlink" title="射击实现"></a>射击实现</h1><p>单独的射击脚本，放在abot_ws&#x2F;src&#x2F;robot_slam&#x2F;scripts&#x2F;shoot_demo.py</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">a#!/usr/bin/env python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># 上面这行指定了Python解释器路径，使得脚本可以直接在命令行中执行</span><br><span class="line">import rospy</span><br><span class="line">import serial</span><br><span class="line">import time</span><br><span class="line">from std_msgs.msg import String</span><br><span class="line"></span><br><span class="line"># 设置串口和波特率</span><br><span class="line">serialPort = &quot;/dev/shoot&quot;</span><br><span class="line">baudRate = 9600</span><br><span class="line"></span><br><span class="line"># 打开串口</span><br><span class="line">ser = serial.Serial(port=serialPort, baudrate=baudRate, parity=&quot;N&quot;, bytesize=8, stopbits=1)</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    try:</span><br><span class="line">        # 发送射击指令</span><br><span class="line">        ser.write(b&#x27;\x55\x01\x12\x00\x00\x00\x01\x69&#x27;)</span><br><span class="line">        print (&#x27;打印射击&#x27;)</span><br><span class="line">        # 等待0.1秒</span><br><span class="line">        time.sleep(0.08)</span><br><span class="line">        # 发送停止射击指令</span><br><span class="line">        ser.write(b&#x27;\x55\x01\x11\x00\x00\x00\x01\x68&#x27;)</span><br><span class="line">        # 进入ROS的spin循环，保持节点持续运行</span><br><span class="line">        rospy.spin()</span><br><span class="line">    except:</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="导航文件"><a href="#导航文件" class="headerlink" title="导航文件"></a>导航文件</h1><p>有这么几个自主巡航赛道的导航文件，我们可以借鉴一下，放在abot_ws&#x2F;src&#x2F;robot_slam&#x2F;scripts&#x2F;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot; A couple of handy conversion utilities taken from the turtlebot_node.py script found in the</span><br><span class="line">    turtlebot_node ROS package at:</span><br><span class="line">    </span><br><span class="line">    http://www.ros.org/wiki/turtlebot_node</span><br><span class="line">    </span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">import PyKDL</span><br><span class="line">from math import pi</span><br><span class="line"></span><br><span class="line">def quat_to_angle(quat):</span><br><span class="line">    rot = PyKDL.Rotation.Quaternion(quat.x, quat.y, quat.z, quat.w)</span><br><span class="line">    return rot.GetRPY()[2]</span><br><span class="line">        </span><br><span class="line">def normalize_angle(angle):</span><br><span class="line">    res = angle</span><br><span class="line">    while res &gt; pi:</span><br><span class="line">        res -= 2.0 * pi</span><br><span class="line">    while res &lt; -pi:</span><br><span class="line">        res += 2.0 * pi</span><br><span class="line">    return res</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="导航点调节"><a href="#导航点调节" class="headerlink" title="导航点调节"></a>导航点调节</h1><p>结合逻辑文件，调节射击阈值和导航点，以下是导航点的调节方式<br>导航点文件在abot_ws\src\robot_slam\launch\multi_goal_shoot.launch，注意，这个launch文件是根据multi_goal.launch生成的，因此记得需要在启动脚本中引用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;launch&gt;</span><br><span class="line">  &lt;node name=&quot;multi_goal&quot; pkg=&quot;robot_slam&quot; type=&quot;你的逻辑文件&quot; output=&quot;screen&quot;&gt;</span><br><span class="line">      &lt;param name=&quot;goalListX&quot; value=&quot;  任务点1X,  任务点2X,以此类推&quot;/&gt;</span><br><span class="line">      &lt;param name=&quot;goalListY&quot; value=&quot; 任务点1Y, 任务点2Y,以此类推&quot;/&gt;</span><br><span class="line">      &lt;param name=&quot;goalListYaw&quot; value=&quot;任务点1旋转角度,  任务点2旋转角度, 以此类推&quot;/&gt;</span><br><span class="line">  &lt;/node&gt;</span><br><span class="line">&lt;/launch&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="射击点调节"><a href="#射击点调节" class="headerlink" title="射击点调节"></a>射击点调节</h1><p>A点颜色靶子</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">if abs(flog1) &gt; 0.5:</span><br><span class="line">    # 创建一个Twist消息</span><br><span class="line">    msg = Twist()</span><br><span class="line">    # 设置消息的角速度为偏差乘以0.01</span><br><span class="line">    msg.angular.z = -0.01 * flog0</span><br><span class="line">    # 发布Twist消息</span><br><span class="line">    self.pub.publish(msg)</span><br><span class="line"># 如果偏差的绝对值小于等于0.5</span><br><span class="line">elif abs(flog1) &lt;= 0.5:</span><br><span class="line">    # 发送射击指令</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>B靶为环形旋转靶，需要调节部分为marker.id（射击哪个靶子）Max_y（靶子射击的最大高度）Min_y（靶子射击的最小高度）Yaw_th(B点射击精度)：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">if marker.id == 1 and case == 1:</span><br><span class="line">    ar_x_0 = marker.pose.pose.position.x</span><br><span class="line">ar_y_0 = marker.pose.pose.position.y</span><br><span class="line">    ar_x_0_abs = abs(ar_x_0)</span><br><span class="line">    ar_y_0_abs = abs(ar_y_0)</span><br><span class="line">    if ar_x_0_abs &gt;= Yaw_th:</span><br><span class="line">        msg = Twist()</span><br><span class="line">        msg.angular.z = -1.5 * ar_x_0</span><br><span class="line">        self.pub.publish(msg)</span><br><span class="line">    elif ar_y_0_abs &lt;= Max_y and ar_y_0_abs &gt;= Min_y and case ==1:</span><br><span class="line">        # 发送射击指令</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>C 靶为来回移动靶，需要调节部分为marker.id（射击哪个靶子），Yaw_th1(C点射击精度):</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">if marker.id == 0 and case == 2:</span><br><span class="line">    ar_x_0 = marker.pose.pose.position.x</span><br><span class="line">ar_y_0 = marker.pose.pose.position.y</span><br><span class="line">    ar_x_0_abs = abs(ar_x_0)</span><br><span class="line">    if ar_x_0_abs &gt;= Yaw_th1:</span><br><span class="line">        msg = Twist()</span><br><span class="line">        msg.angular.z = -1.5 * ar_x_0</span><br><span class="line">        self.pub.publish(msg)</span><br><span class="line">    elif ar_x_0_abs &lt; Yaw_th1 and case == 2:</span><br><span class="line">        # 发送射击指令</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="小车大小及膨胀系数调节"><a href="#小车大小及膨胀系数调节" class="headerlink" title="小车大小及膨胀系数调节"></a>小车大小及膨胀系数调节</h1><p>小车参数文件在”abot_ws\src\robot_slam\params\carto\costmap_common_params.yaml”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">obstacle_range: 3.0</span><br><span class="line">raytrace_range: 3.5</span><br><span class="line"></span><br><span class="line">footprint: [[X1, Y1], [X2, Y2], [X3, Y3], [X4, Y4]]#小车参数（目前是正方形）</span><br><span class="line">#robot_radius: 0.17</span><br><span class="line"></span><br><span class="line">inflation_radius: 膨胀系数</span><br><span class="line">cost_scaling_factor: 3.0</span><br><span class="line"></span><br><span class="line">map_type: costmap</span><br><span class="line">observation_sources: scan</span><br><span class="line">scan: &#123;sensor_frame: laser_link, data_type: LaserScan, topic: scan_filtered, marking: true, clearing: true&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="TF调节"><a href="#TF调节" class="headerlink" title="TF调节"></a>TF调节</h1><p>TF变换文件位置在:”abot_ws\src\abot_base\abot_bringup\launch\bringup_with_imu.launch”</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据结构</title>
      <link href="/2024/06/06/test/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
      <url>/2024/06/06/test/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>让所有很久很久以前都走到幸福结局的时刻</strong></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
